<?xml version="1.0" encoding="UTF-8"?>
<c:custom xmlns:c="uri:colorer:custom">

  <c:custom-type targetNamespace="http://www.w3.org/1999/xhtml" xmlns="http://www.w3.org/1999/xhtml">
    <c:prefix>xhtml</c:prefix>
    <c:prefix>xh</c:prefix>
    <c:empty-prefix/>
    <c:contributors>Cail Lomecb, Eugene Efremov</c:contributors>

    <c:outline>
      <c:element name='body' extract='fullElement' description='Body start'/>
      <c:element name='h1' extract='tillNext' parent='html:Header1Outline' description='Header 1'/>
      <c:element name='h2' extract='tillNext' parent='html:Header2Outline' description='Header 2'/>
      <c:element name='h3' extract='tillNext' parent='html:Header3Outline' description='Header 2'/>
    </c:outline>
    
    <!-- xmlss -->
    <c:script-n-style>
     <c:element name="script">
      <c:language name="perl" expr="perlscript"/>
      <c:language name="jScript" expr="(ecma|j(ava)?)script"/>
      <c:language name="vbScript" expr="vbscript"/>
      <c:language name="php" expr="php" scheme="phpScript"/>
      <c:default name="jScript"/> <!-- multiline support... -->
     </c:element>
     <c:attribute language="jScript" scheme-suffix="Script" region="def:default"/>
     
     <c:element name="style">
      <c:language name="html-css" expr="text\/css"/>
      <c:default name="html-css"/>
     </c:element>
     <c:attribute language="html-css" scheme-suffix="RuleContent"/>
    </c:script-n-style>
    
    <c:references>html-entity:html-addref</c:references>
      
    <type xmlns="http://colorer.sf.net/2003/hrc">
    
     <!-- xmlss support -->
     <scheme name="StyleSheet-content">
      <inherit scheme="xmlss-html-css-RuleContent-attr"/>
     </scheme>

     <scheme name="Script-content">
      <inherit scheme="xmlss-jScript-Script-attr"/>
     </scheme>
   
     

      <scheme name="Color-content">
         <annotation>
            <documentation>
      a color using sRGB: #RRGGBB as Hex values

      There are also 16 widely known color names with their sRGB values:

      Black  = #000000    Green  = #008000
      Silver = #C0C0C0    Lime   = #00FF00
      Gray   = #808080    Olive  = #808000
      White  = #FFFFFF    Yellow = #FFFF00
      Maroon = #800000    Navy   = #000080
      Red    = #FF0000    Blue   = #0000FF
      Purple = #800080    Teal   = #008080
      Fuchsia= #FF00FF    Aqua   = #00FFFF
      
      ...But any browsers support any other colors, 
      allow in scheme "html-css:Colors".
      If you don't want this functionality, delete this inherit, 
      and uncomment next strings...
      
            </documentation>
         </annotation>
         <inherit scheme="html-css:Colors"/>
         <!--
         <inherit scheme="css:NumericColors"/>
         <inherit scheme="css:w3cColors"/>      
         -->
      </scheme>
   

      <region name="NumberSign" parent="def:NumberPrefix"/>
      <region name="NumberPers" parent="def:NumberSuffix"/>
      <region name="Length" parent="def:Number"/>
      <entity name="sign" value="(?{NumberSign}[-+]?)"/>
      <entity name="numb" value="(\d+(\.\d+)?(?{NumberPers}\%)|\d+)"/>
      <entity name="spec" value="([1-9]?(\d+)?(?{def:Symbol}\*))"/>
      <entity name="comm" value="(?{def:Symbol}\,)\s*"/>
      
      <scheme name="Length-content">
         <regexp region="Length" match="/%sign;%numb;/"/>
      </scheme>

      
      <scheme name="MultiLength-content">
         <regexp region="Length" 
          match="/%sign;%numb;|%spec;/"
         />
      </scheme>
      <scheme name="MultiLengths-content">
         <annotation>
            <documentation>
          comma-separated list of MultiLength
           </documentation>
         </annotation>
         <regexp region="Length"
          match="/(%sign;%numb;|%spec;)(%comm;(%sign;%numb;|%spec;))*/"
         />
      </scheme>
      
      <scheme name="Coords-content">
         <annotation>
            <documentation>
      comma separated list of lengths
            </documentation>
         </annotation>
         <regexp region="Length" 
          match="/%sign;%numb;(%comm;%sign;%numb;)*/"
         />
      </scheme>
      
    </type>
  </c:custom-type>
</c:custom>
