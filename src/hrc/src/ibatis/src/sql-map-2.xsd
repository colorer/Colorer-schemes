<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--W3C Schema generated by XMLSpy v2008 (http://www.altova.com)-->
<!--Please add namespace attributes, a targetNamespace attribute and import elements according to your requirements-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	<xs:import namespace="http://www.w3.org/XML/1998/namespace"/>
	<xs:element name="sqlMap">
		<xs:complexType>
			<xs:choice maxOccurs="unbounded">
				<xs:element ref="typeAlias" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="cacheModel" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="resultMap" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="parameterMap" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="sql" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="statement" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="insert" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="update" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="delete" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="select" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="procedure" minOccurs="0" maxOccurs="unbounded"/>
			</xs:choice>
			<xs:attribute name="namespace" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="parameterMap">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="parameter" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="id" use="required" type="xs:anySimpleType"/>
			<xs:attribute name="class" use="required" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="parameter">
		<xs:complexType>
			<xs:attribute name="property" use="required" type="xs:anySimpleType"/>
			<xs:attribute name="javaType" type="xs:anySimpleType"/>
			<xs:attribute name="jdbcType" type="xs:anySimpleType"/>
			<xs:attribute name="typeName" type="xs:anySimpleType"/>
			<xs:attribute name="nullValue" type="xs:anySimpleType"/>
			<xs:attribute name="mode">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="OUT"/>
						<xs:enumeration value="IN"/>
						<xs:enumeration value="INOUT"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="typeHandler" type="xs:anySimpleType"/>
			<xs:attribute name="resultMap" type="xs:anySimpleType"/>
			<xs:attribute name="numericScale" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="resultMap">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="result" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="discriminator" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="id" use="required" type="xs:anySimpleType"/>
			<xs:attribute name="class" use="required" type="xs:anySimpleType"/>
			<xs:attribute name="extends" type="xs:anySimpleType"/>
			<xs:attribute name="xmlName" type="xs:anySimpleType"/>
			<xs:attribute name="groupBy" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="result">
		<xs:complexType>
			<xs:attribute name="property" use="required" type="xs:anySimpleType"/>
			<xs:attribute name="javaType" type="xs:anySimpleType"/>
			<xs:attribute name="column" type="xs:anySimpleType"/>
			<xs:attribute name="columnIndex" type="xs:anySimpleType"/>
			<xs:attribute name="jdbcType" type="xs:anySimpleType"/>
			<xs:attribute name="nullValue" type="xs:anySimpleType"/>
			<xs:attribute name="select" type="xs:anySimpleType"/>
			<xs:attribute name="resultMap" type="xs:anySimpleType"/>
			<xs:attribute name="typeHandler" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="discriminator">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="subMap" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="javaType" use="required" type="xs:anySimpleType"/>
			<xs:attribute name="column" type="xs:anySimpleType"/>
			<xs:attribute name="columnIndex" type="xs:anySimpleType"/>
			<xs:attribute name="jdbcType" type="xs:anySimpleType"/>
			<xs:attribute name="nullValue" type="xs:anySimpleType"/>
			<xs:attribute name="typeHandler" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="subMap">
		<xs:complexType>
			<xs:attribute name="value" use="required" type="xs:anySimpleType"/>
			<xs:attribute name="resultMap" use="required" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="cacheModel">
		<xs:complexType>
			<xs:sequence maxOccurs="unbounded">
				<xs:element ref="flushInterval" minOccurs="0"/>
				<xs:element ref="flushOnExecute" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="property" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="id" use="required" type="xs:anySimpleType"/>
			<xs:attribute name="type" use="required" type="xs:anySimpleType"/>
			<xs:attribute name="readOnly">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true"/>
						<xs:enumeration value="false"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="serialize">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true"/>
						<xs:enumeration value="false"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="flushInterval">
		<xs:complexType>
			<xs:attribute name="milliseconds" type="xs:anySimpleType"/>
			<xs:attribute name="seconds" type="xs:anySimpleType"/>
			<xs:attribute name="minutes" type="xs:anySimpleType"/>
			<xs:attribute name="hours" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="flushOnExecute">
		<xs:complexType>
			<xs:attribute name="statement" use="required" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="property">
		<xs:complexType>
			<xs:attribute name="name" use="required" type="xs:anySimpleType"/>
			<xs:attribute name="value" use="required" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="typeAlias">
		<xs:complexType>
			<xs:attribute name="alias" use="required" type="xs:anySimpleType"/>
			<xs:attribute name="type" use="required" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="sql">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
				<xs:element ref="dynamic"/>
				<xs:element ref="iterate"/>
				<xs:element ref="isParameterPresent"/>
				<xs:element ref="isNotParameterPresent"/>
				<xs:element ref="isEmpty"/>
				<xs:element ref="isNotEmpty"/>
				<xs:element ref="isNotNull"/>
				<xs:element ref="isNull"/>
				<xs:element ref="isNotEqual"/>
				<xs:element ref="isEqual"/>
				<xs:element ref="isGreaterThan"/>
				<xs:element ref="isGreaterEqual"/>
				<xs:element ref="isLessThan"/>
				<xs:element ref="isLessEqual"/>
				<xs:element ref="isPropertyAvailable"/>
				<xs:element ref="isNotPropertyAvailable"/>
			</xs:choice>
			<xs:attribute name="id" use="required" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="include">
		<xs:complexType>
			<xs:attribute name="refid" use="required" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="statement">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
				<xs:element ref="dynamic"/>
				<xs:element ref="iterate"/>
				<xs:element ref="isParameterPresent"/>
				<xs:element ref="isNotParameterPresent"/>
				<xs:element ref="isEmpty"/>
				<xs:element ref="isNotEmpty"/>
				<xs:element ref="isNotNull"/>
				<xs:element ref="isNull"/>
				<xs:element ref="isNotEqual"/>
				<xs:element ref="isEqual"/>
				<xs:element ref="isGreaterThan"/>
				<xs:element ref="isGreaterEqual"/>
				<xs:element ref="isLessThan"/>
				<xs:element ref="isLessEqual"/>
				<xs:element ref="isPropertyAvailable"/>
				<xs:element ref="isNotPropertyAvailable"/>
			</xs:choice>
			<xs:attribute name="id" use="required" type="xs:anySimpleType"/>
			<xs:attribute name="parameterMap" type="xs:anySimpleType"/>
			<xs:attribute name="parameterClass" type="xs:anySimpleType"/>
			<xs:attribute name="resultMap" type="xs:anySimpleType"/>
			<xs:attribute name="resultClass" type="xs:anySimpleType"/>
			<xs:attribute name="cacheModel" type="xs:anySimpleType"/>
			<xs:attribute name="resultSetType">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="SCROLL_INSENSITIVE"/>
						<xs:enumeration value="SCROLL_SENSITIVE"/>
						<xs:enumeration value="FORWARD_ONLY"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="fetchSize" type="xs:anySimpleType"/>
			<xs:attribute name="xmlResultName" type="xs:anySimpleType"/>
			<xs:attribute name="remapResults">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true"/>
						<xs:enumeration value="false"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="timeout" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="select">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
				<xs:element ref="dynamic"/>
				<xs:element ref="iterate"/>
				<xs:element ref="isParameterPresent"/>
				<xs:element ref="isNotParameterPresent"/>
				<xs:element ref="isEmpty"/>
				<xs:element ref="isNotEmpty"/>
				<xs:element ref="isNotNull"/>
				<xs:element ref="isNull"/>
				<xs:element ref="isNotEqual"/>
				<xs:element ref="isEqual"/>
				<xs:element ref="isGreaterThan"/>
				<xs:element ref="isGreaterEqual"/>
				<xs:element ref="isLessThan"/>
				<xs:element ref="isLessEqual"/>
				<xs:element ref="isPropertyAvailable"/>
				<xs:element ref="isNotPropertyAvailable"/>
			</xs:choice>
			<xs:attribute name="id" use="required" type="xs:anySimpleType"/>
			<xs:attribute name="parameterMap" type="xs:anySimpleType"/>
			<xs:attribute name="parameterClass" type="xs:anySimpleType"/>
			<xs:attribute name="resultMap" type="xs:anySimpleType"/>
			<xs:attribute name="resultClass" type="xs:anySimpleType"/>
			<xs:attribute name="cacheModel" type="xs:anySimpleType"/>
			<xs:attribute name="resultSetType">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="SCROLL_INSENSITIVE"/>
						<xs:enumeration value="SCROLL_SENSITIVE"/>
						<xs:enumeration value="FORWARD_ONLY"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="fetchSize" type="xs:anySimpleType"/>
			<xs:attribute name="xmlResultName" type="xs:anySimpleType"/>
			<xs:attribute name="remapResults">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true"/>
						<xs:enumeration value="false"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="timeout" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="insert">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
				<xs:element ref="dynamic"/>
				<xs:element ref="selectKey"/>
				<xs:element ref="iterate"/>
				<xs:element ref="isParameterPresent"/>
				<xs:element ref="isNotParameterPresent"/>
				<xs:element ref="isEmpty"/>
				<xs:element ref="isNotEmpty"/>
				<xs:element ref="isNotNull"/>
				<xs:element ref="isNull"/>
				<xs:element ref="isNotEqual"/>
				<xs:element ref="isEqual"/>
				<xs:element ref="isGreaterThan"/>
				<xs:element ref="isGreaterEqual"/>
				<xs:element ref="isLessThan"/>
				<xs:element ref="isLessEqual"/>
				<xs:element ref="isPropertyAvailable"/>
				<xs:element ref="isNotPropertyAvailable"/>
			</xs:choice>
			<xs:attribute name="id" use="required" type="xs:anySimpleType"/>
			<xs:attribute name="parameterMap" type="xs:anySimpleType"/>
			<xs:attribute name="parameterClass" type="xs:anySimpleType"/>
			<xs:attribute name="timeout" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="selectKey">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
			</xs:choice>
			<xs:attribute name="resultClass" type="xs:anySimpleType"/>
			<xs:attribute name="keyProperty" type="xs:anySimpleType"/>
			<xs:attribute name="type">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="post"/>
						<xs:enumeration value="pre"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="update">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
				<xs:element ref="dynamic"/>
				<xs:element ref="iterate"/>
				<xs:element ref="isParameterPresent"/>
				<xs:element ref="isNotParameterPresent"/>
				<xs:element ref="isEmpty"/>
				<xs:element ref="isNotEmpty"/>
				<xs:element ref="isNotNull"/>
				<xs:element ref="isNull"/>
				<xs:element ref="isNotEqual"/>
				<xs:element ref="isEqual"/>
				<xs:element ref="isGreaterThan"/>
				<xs:element ref="isGreaterEqual"/>
				<xs:element ref="isLessThan"/>
				<xs:element ref="isLessEqual"/>
				<xs:element ref="isPropertyAvailable"/>
				<xs:element ref="isNotPropertyAvailable"/>
			</xs:choice>
			<xs:attribute name="id" use="required" type="xs:anySimpleType"/>
			<xs:attribute name="parameterMap" type="xs:anySimpleType"/>
			<xs:attribute name="parameterClass" type="xs:anySimpleType"/>
			<xs:attribute name="timeout" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="delete">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
				<xs:element ref="dynamic"/>
				<xs:element ref="iterate"/>
				<xs:element ref="isParameterPresent"/>
				<xs:element ref="isNotParameterPresent"/>
				<xs:element ref="isEmpty"/>
				<xs:element ref="isNotEmpty"/>
				<xs:element ref="isNotNull"/>
				<xs:element ref="isNull"/>
				<xs:element ref="isNotEqual"/>
				<xs:element ref="isEqual"/>
				<xs:element ref="isGreaterThan"/>
				<xs:element ref="isGreaterEqual"/>
				<xs:element ref="isLessThan"/>
				<xs:element ref="isLessEqual"/>
				<xs:element ref="isPropertyAvailable"/>
				<xs:element ref="isNotPropertyAvailable"/>
			</xs:choice>
			<xs:attribute name="id" use="required" type="xs:anySimpleType"/>
			<xs:attribute name="parameterMap" type="xs:anySimpleType"/>
			<xs:attribute name="parameterClass" type="xs:anySimpleType"/>
			<xs:attribute name="timeout" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="procedure">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
				<xs:element ref="dynamic"/>
				<xs:element ref="iterate"/>
				<xs:element ref="isParameterPresent"/>
				<xs:element ref="isNotParameterPresent"/>
				<xs:element ref="isEmpty"/>
				<xs:element ref="isNotEmpty"/>
				<xs:element ref="isNotNull"/>
				<xs:element ref="isNull"/>
				<xs:element ref="isNotEqual"/>
				<xs:element ref="isEqual"/>
				<xs:element ref="isGreaterThan"/>
				<xs:element ref="isGreaterEqual"/>
				<xs:element ref="isLessThan"/>
				<xs:element ref="isLessEqual"/>
				<xs:element ref="isPropertyAvailable"/>
				<xs:element ref="isNotPropertyAvailable"/>
			</xs:choice>
			<xs:attribute name="id" use="required" type="xs:anySimpleType"/>
			<xs:attribute name="parameterMap" type="xs:anySimpleType"/>
			<xs:attribute name="parameterClass" type="xs:anySimpleType"/>
			<xs:attribute name="resultMap" type="xs:anySimpleType"/>
			<xs:attribute name="resultClass" type="xs:anySimpleType"/>
			<xs:attribute name="cacheModel" type="xs:anySimpleType"/>
			<xs:attribute name="fetchSize" type="xs:anySimpleType"/>
			<xs:attribute name="xmlResultName" type="xs:anySimpleType"/>
			<xs:attribute name="remapResults">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true"/>
						<xs:enumeration value="false"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="timeout" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="dynamic">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
				<xs:element ref="iterate"/>
				<xs:element ref="isParameterPresent"/>
				<xs:element ref="isNotParameterPresent"/>
				<xs:element ref="isEmpty"/>
				<xs:element ref="isNotEmpty"/>
				<xs:element ref="isNotNull"/>
				<xs:element ref="isNull"/>
				<xs:element ref="isNotEqual"/>
				<xs:element ref="isEqual"/>
				<xs:element ref="isGreaterThan"/>
				<xs:element ref="isGreaterEqual"/>
				<xs:element ref="isLessThan"/>
				<xs:element ref="isLessEqual"/>
				<xs:element ref="isPropertyAvailable"/>
				<xs:element ref="isNotPropertyAvailable"/>
			</xs:choice>
			<xs:attribute name="prepend" type="xs:anySimpleType"/>
			<xs:attribute name="open" type="xs:anySimpleType"/>
			<xs:attribute name="close" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="isNotNull">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
				<xs:element ref="iterate"/>
				<xs:element ref="isParameterPresent"/>
				<xs:element ref="isNotParameterPresent"/>
				<xs:element ref="isEmpty"/>
				<xs:element ref="isNotEmpty"/>
				<xs:element ref="isNotNull"/>
				<xs:element ref="isNull"/>
				<xs:element ref="isNotEqual"/>
				<xs:element ref="isEqual"/>
				<xs:element ref="isGreaterThan"/>
				<xs:element ref="isGreaterEqual"/>
				<xs:element ref="isLessThan"/>
				<xs:element ref="isLessEqual"/>
				<xs:element ref="isPropertyAvailable"/>
				<xs:element ref="isNotPropertyAvailable"/>
			</xs:choice>
			<xs:attribute name="prepend" type="xs:anySimpleType"/>
			<xs:attribute name="open" type="xs:anySimpleType"/>
			<xs:attribute name="close" type="xs:anySimpleType"/>
			<xs:attribute name="property" type="xs:anySimpleType"/>
			<xs:attribute name="removeFirstPrepend">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true"/>
						<xs:enumeration value="false"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="isNull">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
				<xs:element ref="iterate"/>
				<xs:element ref="isParameterPresent"/>
				<xs:element ref="isNotParameterPresent"/>
				<xs:element ref="isEmpty"/>
				<xs:element ref="isNotEmpty"/>
				<xs:element ref="isNotNull"/>
				<xs:element ref="isNull"/>
				<xs:element ref="isNotEqual"/>
				<xs:element ref="isEqual"/>
				<xs:element ref="isGreaterThan"/>
				<xs:element ref="isGreaterEqual"/>
				<xs:element ref="isLessThan"/>
				<xs:element ref="isLessEqual"/>
				<xs:element ref="isPropertyAvailable"/>
				<xs:element ref="isNotPropertyAvailable"/>
			</xs:choice>
			<xs:attribute name="prepend" type="xs:anySimpleType"/>
			<xs:attribute name="open" type="xs:anySimpleType"/>
			<xs:attribute name="close" type="xs:anySimpleType"/>
			<xs:attribute name="property" type="xs:anySimpleType"/>
			<xs:attribute name="removeFirstPrepend">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true"/>
						<xs:enumeration value="false"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="isNotPropertyAvailable">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
				<xs:element ref="iterate"/>
				<xs:element ref="isParameterPresent"/>
				<xs:element ref="isNotParameterPresent"/>
				<xs:element ref="isEmpty"/>
				<xs:element ref="isNotEmpty"/>
				<xs:element ref="isNotNull"/>
				<xs:element ref="isNull"/>
				<xs:element ref="isNotEqual"/>
				<xs:element ref="isEqual"/>
				<xs:element ref="isGreaterThan"/>
				<xs:element ref="isGreaterEqual"/>
				<xs:element ref="isLessThan"/>
				<xs:element ref="isLessEqual"/>
				<xs:element ref="isPropertyAvailable"/>
				<xs:element ref="isNotPropertyAvailable"/>
			</xs:choice>
			<xs:attribute name="prepend" type="xs:anySimpleType"/>
			<xs:attribute name="open" type="xs:anySimpleType"/>
			<xs:attribute name="close" type="xs:anySimpleType"/>
			<xs:attribute name="property" use="required" type="xs:anySimpleType"/>
			<xs:attribute name="removeFirstPrepend">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true"/>
						<xs:enumeration value="false"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="isPropertyAvailable">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
				<xs:element ref="iterate"/>
				<xs:element ref="isParameterPresent"/>
				<xs:element ref="isNotParameterPresent"/>
				<xs:element ref="isEmpty"/>
				<xs:element ref="isNotEmpty"/>
				<xs:element ref="isNotNull"/>
				<xs:element ref="isNull"/>
				<xs:element ref="isNotEqual"/>
				<xs:element ref="isEqual"/>
				<xs:element ref="isGreaterThan"/>
				<xs:element ref="isGreaterEqual"/>
				<xs:element ref="isLessThan"/>
				<xs:element ref="isLessEqual"/>
				<xs:element ref="isPropertyAvailable"/>
				<xs:element ref="isNotPropertyAvailable"/>
			</xs:choice>
			<xs:attribute name="prepend" type="xs:anySimpleType"/>
			<xs:attribute name="open" type="xs:anySimpleType"/>
			<xs:attribute name="close" type="xs:anySimpleType"/>
			<xs:attribute name="property" use="required" type="xs:anySimpleType"/>
			<xs:attribute name="removeFirstPrepend">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true"/>
						<xs:enumeration value="false"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="isEqual">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
				<xs:element ref="iterate"/>
				<xs:element ref="isParameterPresent"/>
				<xs:element ref="isNotParameterPresent"/>
				<xs:element ref="isEmpty"/>
				<xs:element ref="isNotEmpty"/>
				<xs:element ref="isNotNull"/>
				<xs:element ref="isNull"/>
				<xs:element ref="isNotEqual"/>
				<xs:element ref="isEqual"/>
				<xs:element ref="isGreaterThan"/>
				<xs:element ref="isGreaterEqual"/>
				<xs:element ref="isLessThan"/>
				<xs:element ref="isLessEqual"/>
				<xs:element ref="isPropertyAvailable"/>
				<xs:element ref="isNotPropertyAvailable"/>
			</xs:choice>
			<xs:attribute name="prepend" type="xs:anySimpleType"/>
			<xs:attribute name="open" type="xs:anySimpleType"/>
			<xs:attribute name="close" type="xs:anySimpleType"/>
			<xs:attribute name="property" type="xs:anySimpleType"/>
			<xs:attribute name="removeFirstPrepend">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true"/>
						<xs:enumeration value="false"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="compareProperty" type="xs:anySimpleType"/>
			<xs:attribute name="compareValue" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="isNotEqual">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
				<xs:element ref="iterate"/>
				<xs:element ref="isParameterPresent"/>
				<xs:element ref="isNotParameterPresent"/>
				<xs:element ref="isEmpty"/>
				<xs:element ref="isNotEmpty"/>
				<xs:element ref="isNotNull"/>
				<xs:element ref="isNull"/>
				<xs:element ref="isNotEqual"/>
				<xs:element ref="isEqual"/>
				<xs:element ref="isGreaterThan"/>
				<xs:element ref="isGreaterEqual"/>
				<xs:element ref="isLessThan"/>
				<xs:element ref="isLessEqual"/>
				<xs:element ref="isPropertyAvailable"/>
				<xs:element ref="isNotPropertyAvailable"/>
			</xs:choice>
			<xs:attribute name="prepend" type="xs:anySimpleType"/>
			<xs:attribute name="open" type="xs:anySimpleType"/>
			<xs:attribute name="close" type="xs:anySimpleType"/>
			<xs:attribute name="property" type="xs:anySimpleType"/>
			<xs:attribute name="removeFirstPrepend">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true"/>
						<xs:enumeration value="false"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="compareProperty" type="xs:anySimpleType"/>
			<xs:attribute name="compareValue" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="isGreaterThan">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
				<xs:element ref="iterate"/>
				<xs:element ref="isParameterPresent"/>
				<xs:element ref="isNotParameterPresent"/>
				<xs:element ref="isEmpty"/>
				<xs:element ref="isNotEmpty"/>
				<xs:element ref="isNotNull"/>
				<xs:element ref="isNull"/>
				<xs:element ref="isNotEqual"/>
				<xs:element ref="isEqual"/>
				<xs:element ref="isGreaterThan"/>
				<xs:element ref="isGreaterEqual"/>
				<xs:element ref="isLessThan"/>
				<xs:element ref="isLessEqual"/>
				<xs:element ref="isPropertyAvailable"/>
				<xs:element ref="isNotPropertyAvailable"/>
			</xs:choice>
			<xs:attribute name="prepend" type="xs:anySimpleType"/>
			<xs:attribute name="open" type="xs:anySimpleType"/>
			<xs:attribute name="close" type="xs:anySimpleType"/>
			<xs:attribute name="property" type="xs:anySimpleType"/>
			<xs:attribute name="removeFirstPrepend">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true"/>
						<xs:enumeration value="false"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="compareProperty" type="xs:anySimpleType"/>
			<xs:attribute name="compareValue" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="isGreaterEqual">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
				<xs:element ref="iterate"/>
				<xs:element ref="isParameterPresent"/>
				<xs:element ref="isNotParameterPresent"/>
				<xs:element ref="isEmpty"/>
				<xs:element ref="isNotEmpty"/>
				<xs:element ref="isNotNull"/>
				<xs:element ref="isNull"/>
				<xs:element ref="isNotEqual"/>
				<xs:element ref="isEqual"/>
				<xs:element ref="isGreaterThan"/>
				<xs:element ref="isGreaterEqual"/>
				<xs:element ref="isLessThan"/>
				<xs:element ref="isLessEqual"/>
				<xs:element ref="isPropertyAvailable"/>
				<xs:element ref="isNotPropertyAvailable"/>
			</xs:choice>
			<xs:attribute name="prepend" type="xs:anySimpleType"/>
			<xs:attribute name="open" type="xs:anySimpleType"/>
			<xs:attribute name="close" type="xs:anySimpleType"/>
			<xs:attribute name="property" type="xs:anySimpleType"/>
			<xs:attribute name="removeFirstPrepend">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true"/>
						<xs:enumeration value="false"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="compareProperty" type="xs:anySimpleType"/>
			<xs:attribute name="compareValue" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="isLessThan">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
				<xs:element ref="iterate"/>
				<xs:element ref="isParameterPresent"/>
				<xs:element ref="isNotParameterPresent"/>
				<xs:element ref="isEmpty"/>
				<xs:element ref="isNotEmpty"/>
				<xs:element ref="isNotNull"/>
				<xs:element ref="isNull"/>
				<xs:element ref="isNotEqual"/>
				<xs:element ref="isEqual"/>
				<xs:element ref="isGreaterThan"/>
				<xs:element ref="isGreaterEqual"/>
				<xs:element ref="isLessThan"/>
				<xs:element ref="isLessEqual"/>
				<xs:element ref="isPropertyAvailable"/>
				<xs:element ref="isNotPropertyAvailable"/>
			</xs:choice>
			<xs:attribute name="prepend" type="xs:anySimpleType"/>
			<xs:attribute name="open" type="xs:anySimpleType"/>
			<xs:attribute name="close" type="xs:anySimpleType"/>
			<xs:attribute name="property" type="xs:anySimpleType"/>
			<xs:attribute name="removeFirstPrepend">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true"/>
						<xs:enumeration value="false"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="compareProperty" type="xs:anySimpleType"/>
			<xs:attribute name="compareValue" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="isLessEqual">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
				<xs:element ref="iterate"/>
				<xs:element ref="isParameterPresent"/>
				<xs:element ref="isNotParameterPresent"/>
				<xs:element ref="isEmpty"/>
				<xs:element ref="isNotEmpty"/>
				<xs:element ref="isNotNull"/>
				<xs:element ref="isNull"/>
				<xs:element ref="isNotEqual"/>
				<xs:element ref="isEqual"/>
				<xs:element ref="isGreaterThan"/>
				<xs:element ref="isGreaterEqual"/>
				<xs:element ref="isLessThan"/>
				<xs:element ref="isLessEqual"/>
				<xs:element ref="isPropertyAvailable"/>
				<xs:element ref="isNotPropertyAvailable"/>
			</xs:choice>
			<xs:attribute name="prepend" type="xs:anySimpleType"/>
			<xs:attribute name="open" type="xs:anySimpleType"/>
			<xs:attribute name="close" type="xs:anySimpleType"/>
			<xs:attribute name="property" type="xs:anySimpleType"/>
			<xs:attribute name="removeFirstPrepend">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true"/>
						<xs:enumeration value="false"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="compareProperty" type="xs:anySimpleType"/>
			<xs:attribute name="compareValue" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="isEmpty">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
				<xs:element ref="iterate"/>
				<xs:element ref="isParameterPresent"/>
				<xs:element ref="isNotParameterPresent"/>
				<xs:element ref="isEmpty"/>
				<xs:element ref="isNotEmpty"/>
				<xs:element ref="isNotNull"/>
				<xs:element ref="isNull"/>
				<xs:element ref="isNotEqual"/>
				<xs:element ref="isEqual"/>
				<xs:element ref="isGreaterThan"/>
				<xs:element ref="isGreaterEqual"/>
				<xs:element ref="isLessThan"/>
				<xs:element ref="isLessEqual"/>
				<xs:element ref="isPropertyAvailable"/>
				<xs:element ref="isNotPropertyAvailable"/>
			</xs:choice>
			<xs:attribute name="prepend" type="xs:anySimpleType"/>
			<xs:attribute name="open" type="xs:anySimpleType"/>
			<xs:attribute name="close" type="xs:anySimpleType"/>
			<xs:attribute name="property" type="xs:anySimpleType"/>
			<xs:attribute name="removeFirstPrepend">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true"/>
						<xs:enumeration value="false"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="isNotEmpty">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
				<xs:element ref="iterate"/>
				<xs:element ref="isParameterPresent"/>
				<xs:element ref="isNotParameterPresent"/>
				<xs:element ref="isEmpty"/>
				<xs:element ref="isNotEmpty"/>
				<xs:element ref="isNotNull"/>
				<xs:element ref="isNull"/>
				<xs:element ref="isNotEqual"/>
				<xs:element ref="isEqual"/>
				<xs:element ref="isGreaterThan"/>
				<xs:element ref="isGreaterEqual"/>
				<xs:element ref="isLessThan"/>
				<xs:element ref="isLessEqual"/>
				<xs:element ref="isPropertyAvailable"/>
				<xs:element ref="isNotPropertyAvailable"/>
			</xs:choice>
			<xs:attribute name="prepend" type="xs:anySimpleType"/>
			<xs:attribute name="open" type="xs:anySimpleType"/>
			<xs:attribute name="close" type="xs:anySimpleType"/>
			<xs:attribute name="property" type="xs:anySimpleType"/>
			<xs:attribute name="removeFirstPrepend">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true"/>
						<xs:enumeration value="false"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="isParameterPresent">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
				<xs:element ref="iterate"/>
				<xs:element ref="isParameterPresent"/>
				<xs:element ref="isNotParameterPresent"/>
				<xs:element ref="isEmpty"/>
				<xs:element ref="isNotEmpty"/>
				<xs:element ref="isNotNull"/>
				<xs:element ref="isNull"/>
				<xs:element ref="isNotEqual"/>
				<xs:element ref="isEqual"/>
				<xs:element ref="isGreaterThan"/>
				<xs:element ref="isGreaterEqual"/>
				<xs:element ref="isLessThan"/>
				<xs:element ref="isLessEqual"/>
				<xs:element ref="isPropertyAvailable"/>
				<xs:element ref="isNotPropertyAvailable"/>
			</xs:choice>
			<xs:attribute name="prepend" type="xs:anySimpleType"/>
			<xs:attribute name="open" type="xs:anySimpleType"/>
			<xs:attribute name="close" type="xs:anySimpleType"/>
			<xs:attribute name="removeFirstPrepend">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true"/>
						<xs:enumeration value="false"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="isNotParameterPresent">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
				<xs:element ref="iterate"/>
				<xs:element ref="isParameterPresent"/>
				<xs:element ref="isNotParameterPresent"/>
				<xs:element ref="isEmpty"/>
				<xs:element ref="isNotEmpty"/>
				<xs:element ref="isNotNull"/>
				<xs:element ref="isNull"/>
				<xs:element ref="isNotEqual"/>
				<xs:element ref="isEqual"/>
				<xs:element ref="isGreaterThan"/>
				<xs:element ref="isGreaterEqual"/>
				<xs:element ref="isLessThan"/>
				<xs:element ref="isLessEqual"/>
				<xs:element ref="isPropertyAvailable"/>
				<xs:element ref="isNotPropertyAvailable"/>
			</xs:choice>
			<xs:attribute name="prepend" type="xs:anySimpleType"/>
			<xs:attribute name="open" type="xs:anySimpleType"/>
			<xs:attribute name="close" type="xs:anySimpleType"/>
			<xs:attribute name="removeFirstPrepend">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true"/>
						<xs:enumeration value="false"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="iterate">
		<xs:complexType mixed="true">
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="include"/>
				<xs:element ref="iterate"/>
				<xs:element ref="isParameterPresent"/>
				<xs:element ref="isNotParameterPresent"/>
				<xs:element ref="isEmpty"/>
				<xs:element ref="isNotEmpty"/>
				<xs:element ref="isNotNull"/>
				<xs:element ref="isNull"/>
				<xs:element ref="isNotEqual"/>
				<xs:element ref="isEqual"/>
				<xs:element ref="isGreaterThan"/>
				<xs:element ref="isGreaterEqual"/>
				<xs:element ref="isLessThan"/>
				<xs:element ref="isLessEqual"/>
				<xs:element ref="isPropertyAvailable"/>
				<xs:element ref="isNotPropertyAvailable"/>
			</xs:choice>
			<xs:attribute name="prepend" type="xs:anySimpleType"/>
			<xs:attribute name="property" type="xs:anySimpleType"/>
			<xs:attribute name="removeFirstPrepend">
				<xs:simpleType>
					<xs:restriction base="xs:NMTOKEN">
						<xs:enumeration value="true"/>
						<xs:enumeration value="false"/>
						<xs:enumeration value="iterate"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
			<xs:attribute name="open" type="xs:anySimpleType"/>
			<xs:attribute name="close" type="xs:anySimpleType"/>
			<xs:attribute name="conjunction" type="xs:anySimpleType"/>
		</xs:complexType>
	</xs:element>
</xs:schema>
