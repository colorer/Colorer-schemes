<?xml version="1.0" encoding="UTF-8"?>

<custom xmlns="uri:colorer:custom">

 <custom-type targetNamespace="http://www.w3.org/1999/xlink">
   <prefix>xlink</prefix>
   <prefix>xl</prefix>
 </custom-type>

 <custom-type targetNamespace="http://www.w3.org/2000/svg">
  <top-level>
   <element>svg</element>
  </top-level>
  
  <prefix>svg</prefix>
  <prefix>s</prefix>
  <empty-prefix/>
  <contributors>Eugene Efremov</contributors>

  <outline>
   <element name='defs' extract='withAttribute' description='defines'/>
   <element name='g' extract='withAttribute' description='group'/>
   <element name='path' extract='withAttribute' description='path line'/>
   <element name='text' extract='withAttribute' description='text'/>
  </outline>

  <!-- xmlss -->
  <script-n-style>
   <element name="script">
    <language name="jScript" expr="(ecma|j(ava)?)script"/>
    <default name="jScript"/>
   </element>
   <attribute language="jScript" scheme-suffix="Script" region="def:default"/>
   <element name="style">
    <language name="svg-css" expr="text\/css"/>
   </element>
   <attribute language="svg-css" scheme-suffix="RuleContent"/>
  </script-n-style>
  
    
  <type xmlns="http://colorer.sf.net/2003/hrc">
  
   <!-- xmlss support -->
   <scheme name="StyleSheet-content">
    <inherit scheme="xmlss-svg-css-RuleContent-attr"/>
   </scheme>

   <scheme name="Script-content">
    <inherit scheme="xmlss-jScript-Script-attr"/>
   </scheme>
   
  
   <!--annotation>
    <documentation>
     Custom-defines. Overload:
SimpleType BaselineShiftValue = svg:Length      *
SimpleType Boolean = boolean                     
SimpleType ClipValue = string                   *
SimpleType ClipPathValue = svg:MaskValue        
SimpleType Color = string                       *
SimpleType Coordinate = svg:Length               
SimpleType Coordinates = svg:Lengths             
SimpleType EnableBackgroundValue = string       *
SimpleType FilterValue = svg:MaskValue           
SimpleType FontSizeValue = string		*
SimpleType FontSizeAdjustValue = string		*
SimpleType GlyphOrientationHorizontalValue = string	*
SimpleType GlyphOrientationVerticalValue = svg:GlyphOrientationHorizontalValue
SimpleType Integer = nonNegativeInteger          
SimpleType KerningValue = string		*
SimpleType SpacingValue = string		*
SimpleType Length = string                      *
SimpleType Lengths = svg:Length                  
SimpleType LinkTarget = QName                    
SimpleType MaskValue = string                   * 
SimpleType MarkerValue = svg:MaskValue           
SimpleType Number = decimal                      
SimpleType NumberOptionalNumber = svg:Number     
SimpleType NumberOrPercentage = svg:Number      *
SimpleType Numbers = svg:Number                  
SimpleType OpacityValue = svg:Number            *
SimpleType Paint = svg:Color                    *
SimpleType PreserveAspectRatioSpec = string     *
SimpleType Points = string                      *
SimpleType PathData = string                    *
SimpleType Script = string                      *
SimpleType StyleSheet = string                  *
SimpleType StrokeDashArrayValue = string
SimpleType StrokeDashOffsetValue = svg:StrokeWidthValue
SimpleType StrokeMiterLimitValue = string
SimpleType StrokeWidthValue = string
SimpleType SVGColor = svg:Color                  
SimpleType TransformList = string               *
SimpleType URI = NetURL                          
SimpleType ViewBoxSpec = string                 *
 * - new scheme 
    </documentation>
    
   </annotation-->      

 
   <scheme name="Color-content">
    <inherit scheme="svg-css:Colors"/>
    <regexp region="Enumeration" match="/inherit/"/>    
   </scheme>

   <scheme name="URI-content">
    <inherit scheme="css:urlFunc"/>
    <inherit scheme="NetURL"/>    
   </scheme>
   
   <scheme name="ClipValue-content"> 
    <inherit scheme="css:shareFunc"/>
   </scheme>
   
   <scheme name="MaskValue-content"> 
    <regexp region="Enumeration" match="/none|inherit/"/>    
    <inherit scheme="URI-content"/>
   </scheme>

   <scheme name="Paint-content">
    <regexp region="Enumeration" match="/none|currentColor|inherit/"/>
    <inherit scheme="Color-content"/>
    <inherit scheme="URI-content"/>
   </scheme>
   
   <scheme name="TransformList-content">
    <inherit scheme="svg-css:TransformPropertyFunc"/>
   </scheme>
   
   <scheme name="NumberOrPercentage-content">
    <regexp match="/\d{1,3}(\%)/" region="def:Number" region1="def:NumberSuffix"/>
    <inherit scheme="Number-content"/>
   </scheme>
   
   <scheme name="OpacityValue-content">
    <regexp region="Enumeration" match="/inherit/"/>    
    <inherit scheme="NumberOrPercentage-content"/>
   </scheme>
   
   <scheme name="Length-content">
    <inherit scheme="css:NumericLength"/>
   </scheme>
   <scheme name="BaselineShiftValue-content">
    <regexp region="Enumeration" match="/baseline|sub|super|inherit/"/>    
    <inherit scheme="Length-content"/>
   </scheme>
   <scheme name="KerningValue-content">
    <regexp region="Enumeration" match="/auto|inherit/"/>    
    <inherit scheme="Length-content"/>
   </scheme>
   <scheme name="SpacingValue-content">
    <regexp region="Enumeration" match="/normal|inherit/"/>    
    <inherit scheme="Length-content"/>
   </scheme>

   <scheme name="StrokeWidthValue-content">
    <regexp region="Enumeration" match="/inherit/"/>    
    <inherit scheme="Length-content"/>
   </scheme>
   <scheme name="StrokeMiterLimitValue-content">
    <regexp region="Enumeration" region1="def:Number"
     match="/inherit|(\d+)/"/>    
   </scheme>
   <scheme name="StrokeDashArrayValue-content">
    <regexp region="Enumeration" match="/inherit|none/"/>    
    <inherit scheme="css:NumericLengthLst"/>
   </scheme>

   <scheme name="FontSizeValue-content">
    <regexp region="Enumeration" match="/xx-small | x-small | small | medium | large | x-large | xx-large /x"/> 
    <regexp region="Enumeration" match="/larger | smaller /x"/> 
    <inherit scheme="Length-content"/>
   </scheme>
   <scheme name="FontSizeAdjustValue-content">
    <regexp region="Enumeration" match="/none|inherit/"/>    
    <inherit scheme="Number-content"/>
   </scheme>

   <scheme name="GlyphOrientationHorizontalValue-content">
    <regexp region="Enumeration" match="/inherit/"/>    
    <inherit scheme="css:NumericArc"/>
   </scheme>
   <scheme name="GlyphOrientationVeritcalValue-content">
    <regexp region="Enumeration" match="/auto|inherit/"/>    
    <inherit scheme="css:NumericArc"/>
   </scheme>

   
   <entity name="mmm" value="(?{def:Keyword}M(id|in|ax))"/>
   
   <scheme name="PreserveAspectRatioSpec-content">
    <regexp region="Enumeration" match="/none/"/>
    <regexp region="Enumeration" 
     match="/x%mmm;Y%mmm;(\s+(?{def:KeywordStrong}meet|slice))?/"/>
   </scheme>

   
   <annotation>
    <documentation>
     PathData - schemes and regions:

svg-path:
    wsp* moveto-drawto-command-groups? wsp*

moveto-drawto-command-groups:
    moveto-drawto-command-group
    | moveto-drawto-command-group wsp* moveto-drawto-command-groups

moveto-drawto-command-group:
    moveto wsp* drawto-commands?

drawto-commands:
    drawto-command
    | drawto-command wsp* drawto-commands

drawto-command:
    closepath
    | lineto
    | horizontal-lineto
    | vertical-lineto
    | curveto
    | smooth-curveto
    | quadratic-bezier-curveto
    | smooth-quadratic-bezier-curveto
    | elliptical-arc

moveto:
    ( "M" | "m" ) wsp* moveto-argument-sequence

moveto-argument-sequence:
    coordinate-pair
    | coordinate-pair comma-wsp? lineto-argument-sequence

closepath:
    ("Z" | "z")

lineto:
    ( "L" | "l" ) wsp* lineto-argument-sequence

lineto-argument-sequence:
    coordinate-pair
    | coordinate-pair comma-wsp? lineto-argument-sequence

horizontal-lineto:
    ( "H" | "h" ) wsp* horizontal-lineto-argument-sequence

horizontal-lineto-argument-sequence:
    coordinate
    | coordinate comma-wsp? horizontal-lineto-argument-sequence

vertical-lineto:
    ( "V" | "v" ) wsp* vertical-lineto-argument-sequence

vertical-lineto-argument-sequence:
    coordinate
    | coordinate comma-wsp? vertical-lineto-argument-sequence

curveto:
    ( "C" | "c" ) wsp* curveto-argument-sequence

curveto-argument-sequence:
    curveto-argument
    | curveto-argument comma-wsp? curveto-argument-sequence

curveto-argument:
    coordinate-pair comma-wsp? coordinate-pair comma-wsp? coordinate-pair

smooth-curveto:
    ( "S" | "s" ) wsp* smooth-curveto-argument-sequence

smooth-curveto-argument-sequence:
    smooth-curveto-argument
    | smooth-curveto-argument comma-wsp? smooth-curveto-argument-sequence

smooth-curveto-argument:
    coordinate-pair comma-wsp? coordinate-pair

quadratic-bezier-curveto:
    ( "Q" | "q" ) wsp* quadratic-bezier-curveto-argument-sequence

quadratic-bezier-curveto-argument-sequence:
    quadratic-bezier-curveto-argument
    | quadratic-bezier-curveto-argument comma-wsp? 
        quadratic-bezier-curveto-argument-sequence

quadratic-bezier-curveto-argument:
    coordinate-pair comma-wsp? coordinate-pair

smooth-quadratic-bezier-curveto:
    ( "T" | "t" ) wsp* smooth-quadratic-bezier-curveto-argument-sequence

smooth-quadratic-bezier-curveto-argument-sequence:
    coordinate-pair
    | coordinate-pair comma-wsp? smooth-quadratic-bezier-curveto-argument-sequence

elliptical-arc:
    ( "A" | "a" ) wsp* elliptical-arc-argument-sequence

elliptical-arc-argument-sequence:
    elliptical-arc-argument
    | elliptical-arc-argument comma-wsp? elliptical-arc-argument-sequence

elliptical-arc-argument:
    nonnegative-number comma-wsp? nonnegative-number comma-wsp? 
        number comma-wsp flag comma-wsp flag comma-wsp coordinate-pair

coordinate-pair:
    coordinate comma-wsp? coordinate

coordinate:
    number

nonnegative-number:
    integer-constant
    | floating-point-constant

number:
    sign? integer-constant
    | sign? floating-point-constant

flag:
    "0" | "1"

comma-wsp:
    (wsp+ comma? wsp*) | (comma wsp*)

comma:
    ","

integer-constant:
    digit-sequence

floating-point-constant:
    fractional-constant exponent?
    | digit-sequence exponent

fractional-constant:
    digit-sequence? "." digit-sequence
    | digit-sequence "."

exponent:
    ( "e" | "E" ) sign? digit-sequence

sign:
    "+" | "-"

digit-sequence:
    digit
    | digit digit-sequence

digit:
    "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"

wsp:
    (#x20 | #x9 | #xD | #xA)
    
    </documentation>
   </annotation>
   
   <region name="PathDataCommandM" parent="def:Keyword"/>
   <region name="PathDataCommand" parent="def:Keyword"/>
   <region name="NumberSign" parent="def:NumberPrefix"/>
   <region name="NumberExp" parent="def:NumberSuffix"/>
   <region name="s-hack" parent="def:ParameterUnknown"/>
   
   <entity name="exp" value="((?{NumberExp}[eE][+\-]?)\d+)"/>
   <entity name="float" value="(?{def:FloatNumber}(\d*\.\d+|\d+\.)%exp;?|\d+%exp;)"/>
   <entity name="uns-number" value="(?{def:Number}%float;|\d+)"/>
   <entity name="number" value="((?{NumberSign}([+\-]?))%uns-number;)"/>
   <entity name="flag" value="(?{def:BooleanConstant}[01])"/>
   <entity name="comma" value="(?{def:Symbol}(\s*\,\s*))"/>
   <entity name="comma-wsp" value="(%comma;|\s+(\d)?=|\s*(\d)?!)"/>
   <entity name="coord-pair" value="%number;%comma-wsp;%number;"/>
   <entity name="coord-quadr" value="%number;%comma-wsp;%number;%comma-wsp;%number;%comma-wsp;%number;"/>
   <entity name="arc-arg" value="%uns-number;%comma-wsp;%uns-number;%comma-wsp;%number;%comma-wsp;%flag;%comma-wsp;%flag;%comma-wsp;%coord-pair;"/>
   <entity name="eor" value="[zmlhvcqstaZMLHVCSQTA\x27\x22]"/>
   
   <annotation><documentation>
    Next entitys - hack for unworked //s. 
    When //s go to work, please change "s-hack" to false regexp
   </documentation></annotation>
   <entity name="s-hack" value="(?{s-hack}[\d\s\.\,eE+\-]*)"/>
   <entity name="s-hack-eol" value="%s-hack;$"/>
   <entity name="s-hack-bol" value="^%s-hack;"/>
   
   
   <scheme name="err-command">
    <!-- s-hack -->
    <regexp match="/[^\d\.]\s*\M%eor;/"  region="def:Error" priority="low"/>
    <regexp match="/%s-hack-eol;/" priority="low"/>
    <regexp match="/%s-hack-bol;/" priority="low"/>
    <!-- errors -->
    <regexp match="/\S*/" priority="low" region="def:Error"/>   
   </scheme>
   <scheme name="coord-command">
    <regexp match="/%number;/"/>
    <regexp match="/%comma-wsp;/"/>
    <inherit scheme="err-command"/>
   </scheme>
   <scheme name="coord-pair-command">
    <regexp match="/%coord-pair;/"/>
    <regexp match="/%comma-wsp;/"/>
    <inherit scheme="err-command"/>
   </scheme>
   <scheme name="coord-quadr-command">
   <!--
     %coord-quadr dsn't work (probably limit of (?{}) level) :-(
     switch block to scheme coord-pair-command
    -->
    <regexp match="/%coord-quadr;/"/>
    <regexp match="/%comma-wsp;/"/>
    <inherit scheme="err-command"/>
   </scheme>
   <scheme name="arc-command">
   <!--
     %arc-arg dsn't work: (probably limit of (?{}) level) :-(
     switch block to scheme coord-command
    -->
    <regexp match="/%arc-arg;/"/>
    <regexp match="/%comma-wsp;/"/>
    <inherit scheme="err-command"/>
   </scheme>
   
   
   <scheme name="drawto-commands">
    <block scheme="coord-pair-command"
     start="/([mM])?#1\s*\M%number;/is" 
     end="/\M%eor;/is" 
    />  
    
    <regexp match="/[Zz]/" region="PathDataCommand"/>
    <block scheme="coord-command" region01="PathDataCommand" 
     start="/([HVhv]\s*)\M%number;/is" 
     end="/\M%eor;/is" 
    />  
    <block scheme="coord-pair-command" region01="PathDataCommand"
     start="/([LCTlct]\s*)\M%number;/is" 
     end="/\M%eor;/is" region10="PathDataCommand"
    />  
    <block scheme="coord-pair-command" region01="PathDataCommand"
     start="/([SQsq]\s*)\M(%coord-quadr;|%s-hack-eol;)/is" 
     end="/\M%eor;/is" 
    />  <!--need coord-quadr-command... -->
    <block scheme="coord-command" region01="PathDataCommand"
     start="/([aA]\s*)\M(%arc-arg;|%s-hack-eol;)/is" 
     end="/\M%eor;/is" 
    />  <!--need arc-command... -->
    <regexp match="/\S*/" priority="low" region="def:Error"/>   
   </scheme>
   
   <scheme name="PathData-content">
    <block start="/m/is" end="/\M[Mm\x27\x22]/"
     scheme="drawto-commands" region00="PathDataCommandM"/>
   </scheme>

   <scheme name="Points-content">
    <inherit scheme="coord-pair-command"/>
   </scheme>
   <scheme name="ViewBoxSpec-content">
    <inherit scheme="coord-pair-command"/>
    <!--need coord-quadr-command... -->
   </scheme>
   <scheme name="EnableBackgroundValue-content">   
    <regexp region="Enumeration" match="/accumulate|new|inherit/"/>    
    <inherit scheme="ViewBoxSpec-content"/>
   </scheme>

   <annotation><documentation>
    End of custom defines. Autocreated area begin here...
   </documentation></annotation>
  </type>   
 </custom-type>
</custom>
<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is the svg schema for xsd2hrc.
   -
   - The Initial Developer of the Original Code is
   - Eugene Efremov <4mirror@mail.ru>
   - Portions created by the Initial Developer are Copyright (C) 2003-2004
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the LGPL or the GPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->
