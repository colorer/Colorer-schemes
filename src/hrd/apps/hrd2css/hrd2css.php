<?php

if ($argc < 2 ||
    in_array($argv[1], array('--help', '-help', '-h', '-?'))) {

    echo "Builds function list from PHP sources\n\n";
    echo "Usage: $argv[0] <infile.hrd> > outfile.css\n\n";
    echo "       --help, -help, -h, -?\t to get this help\n";
    exit;
}

$file = $argv[1];
$header = "/** Generated by hrd2css.php from $argv[1] **/\n\n";
$f_inhrd = false;

function startElement($parser, $name, $attrs)
{
   global $f_inhrd;
   // start processing after <HRD>
   if (!$f_inhrd) {
       $f_inhrd = (strcmp($name, "HRD") == 0);
       return;
   }

   if (strcmp($name, "ASSIGN") == 0) {
      if (array_key_exists("NAME", $attrs)) {
         echo strtr($attrs["NAME"], ":", "-");
         echo "\t{";
         if (array_key_exists("FORE", $attrs)) {
            echo "color: " . $attrs["FORE"] . "; ";
         }
         if (array_key_exists("BACK", $attrs)) {
            echo "background-color: " . $attrs["BACK"] . "; ";
         }
         if (array_key_exists("STYLE", $attrs)) {
            if ($attrs["STYLE"] & 1) echo "font-weight: bold; ";
            if ($attrs["STYLE"] & 2) echo "font-style: italic; ";
            if ($attrs["STYLE"] & 4) echo "text-decoration: underline; ";
         }
         echo "}";
      }
   } elseif (strcmp($name, "DOCUMENTATION") == 0) {
      echo "/** ";
   }
}


function endElement($parser, $name)
{
   global $f_inhrd;
   // stop processing when <HRD> reached
   if (strcmp($name, "HRD") == 0) {
       $f_inhrd = false;
       return;
   }
   if (strcmp($name, "DOCUMENTATION") == 0) {
      echo " **/";
   }
}


function characterData($parser, $data)
{
   global $f_inhrd;
   if (!$f_inhrd) return;
   echo $data;
}


$xml_parser = xml_parser_create();
xml_set_element_handler($xml_parser, "startElement", "endElement");
xml_set_character_data_handler($xml_parser, "characterData");
if (!($fp = fopen($file, "r"))) {
   die("could not open XML input");
}

echo $header;

while ($data = fread($fp, 4096)) {
   if (!xml_parse($xml_parser, $data, feof($fp))) {
       die(sprintf("XML error: %s at line %d",
                   xml_error_string(xml_get_error_code($xml_parser)),
                   xml_get_current_line_number($xml_parser)));
   }
}
xml_parser_free($xml_parser);

