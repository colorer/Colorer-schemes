<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hrc
  PUBLIC "-//Cail Lomecb//DTD Colorer HRC take5//EN" "http://colorer.sf.net/2003/hrc.dtd">
<hrc xmlns="http://colorer.sf.net/2003/hrc" xmlns:xs="http://www.w3.org/2001/XMLSchema"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     version="take5"
     xsi:schemaLocation="http://colorer.sf.net/2003/hrc http://colorer.sf.net/2003/hrc.xsd">
<!--
  insert this define into HRC base catalog file (colorer.hrc)

  <prototype name="xmlschema" group="group" description="xmlschema" targetNamespace="http://www.w3.org/2001/XMLSchema">
    <location link="xmlschema.hrc"/>
    <filename>/\./ix</filename>
  </prototype>
--><type name="xmlschema">
      <annotation>
         <documentation>
           XSLT Generated HRC scheme for language 'xmlschema'
           from XML Schema with xsd2hrc.xsl version 0.9.4 
            Copyright (C) 2002-04 Cail Lomecb
            Portions copyright (C) 2004-06 Eugene Efremov

           Scheme parameters:
             targetNamespace             : http://www.w3.org/2001/XMLSchema
             hrctype                     : xmlschema
             allow-common-attr           : yes
             allow-any-attr              : no
             allow-unknown-elements      : no
             allow-unknown-root-elements : no
             force-single-root           : yes
             default prefixes            : (?{}(?{}s|xs|xsd|wxs)(?{}:))?
               you can change them with entity 'nsprefix'
             
             </documentation>
         <documentation>
          Schema documentation:
    Part 1 version: Id: structures.xsd,v 1.2 2004/01/15 11:34:25 ht Exp 
    Part 2 version: Id: datatypes.xsd,v 1.3 2004/01/23 18:11:13 ht Exp 
  </documentation>
         <contributors><![CDATA[
     Cail Lomecb <cail@nm.ru>,
     Eugene Efremov <4mirror@mail.ru>
    ]]></contributors>
      </annotation>
      <import type="def"/>
      <region name="element.start.name" parent="xml:element.defined.start.name"/>
      <region name="element.end.name" parent="xml:element.defined.end.name"/>
      <region name="element.start.lt" parent="xml:element.start.lt"/>
      <region name="element.start.gt" parent="xml:element.start.gt"/>
      <region name="element.end.lt" parent="xml:element.end.lt"/>
      <region name="element.end.gt" parent="xml:element.end.gt"/>
      <region name="element.nsprefix" parent="xml:element.defined.nsprefix"/>
      <region name="element.nscolon" parent="xml:element.nscolon"/>
      <region name="Attribute.name" parent="xml:Attribute.defined.name"/>
      <region name="Attribute.nsprefix" parent="xml:Attribute.defined.nsprefix"/>
      <region name="Attribute.nscolon" parent="xml:Attribute.nscolon"/>
      <region name="AttValue" parent="xml:AttValue.defined"/>
      <region name="AttValue.start" parent="xml:AttValue.defined.start"/>
      <region name="AttValue.end" parent="xml:AttValue.defined.end"/>
      <region name="Enumeration" parent="xml:Enumeration"
              description="Enumerated type values"/>
      <region name="schemaOutlined" description="Schema root" parent="def:Outlined"/>
      <region name="importOutlined" description="Schema import" parent="def:Outlined"/>
      <region name="includeOutlined" description="Schema include" parent="def:Outlined"/>
      <region name="elementOutlined" description="Global element" parent="def:Outlined"/>
      <region name="groupOutlined" description="Global group" parent="def:Outlined"/>
      <region name="attributeOutlined" description="Global attribute" parent="def:Outlined"/>
      <region name="attributeGroupOutlined" description="Schema global attribute group"
              parent="def:Outlined"/>
      <region name="complexTypeOutlined" description="Global complex type"
              parent="def:Outlined"/>
      <region name="simpleTypeOutlined" description="Global simple type"
              parent="def:Outlined"/>
      <region name="annotationOutlined" description="Annotation definition"
              parent="def:Outlined"/>
      <entity name="ns-real-prefix" value="(?{}(?{}s|xs|xsd|wxs)(?{}:))"/>
      <entity name="nsprefix" value="(?{}(?{}s|xs|xsd|wxs)(?{}:))?"/>
      <entity name="attr-nsprefix" value="(?{}(?{}s|xs|xsd|wxs)(?{Attribute.nscolon}:))"/>
      <scheme name="_hrc_int_elementContent">
         <block start="/~( (&lt;) (  ((%xml:NCName;) (:) )? (%xml:Name;) ) \M &gt;?   )/x"
                end="/( (&lt;\/) (\y3\b)?= ( (%xml:NCName;) (:) )? (%xml:Name;) \b \M \s* (&gt;?)                   | (\/ \M &gt;) )/x"
                region01="PairStart"
                region02="element.start.lt"
                region05="element.nsprefix"
                region06="element.nscolon"
                region07="element.start.name"
                region11="PairEnd"
                region12="element.end.lt"
                region15="element.nsprefix"
                region16="element.nscolon"
                region17="element.end.name"
                region18="element.end.gt"
                region19="element.start.gt"
                scheme="xml:elementContent2"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_AttValue">
         <block start="/(&#34;)/" end="/(\y1)/" region00="PairStart" region10="PairEnd"
                region01="AttValue.start"
                region11="AttValue.end"
                scheme="xml:AttValue.content.quot"
                region="AttValue"/>
         <block start="/(')/" end="/(\y1)/" region00="PairStart" region10="PairEnd"
                region01="AttValue.start"
                region11="AttValue.end"
                scheme="xml:AttValue.content.apos"
                region="AttValue"/>
      </scheme>
      <scheme name="AttributeContent">
         <inherit scheme="xml:AttributeContent">
            <virtual scheme="xml:AttValue" subst-scheme="_hrc_int_AttValue"/>
         </inherit>
      </scheme>
      <scheme name="xpath-type-content-old"/>
      <scheme name="xpath-type-content-error">
         <inherit scheme="xpath-type-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="xpath-type-Attributes"/>
      <scheme name="xpath-type-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="xpath-type-content-error"/>
         </inherit>
      </scheme>
      <scheme name="xpath-type-attr-content-old"/>
      <scheme name="xpath-type-attr-content-error">
         <inherit scheme="xpath-type-attr-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="xpath-type-attr-Attributes"/>
      <scheme name="xpath-type-attr-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="xpath-type-attr-content-error"/>
         </inherit>
      </scheme>
      <scheme name="REstring-content-old"/>
      <scheme name="REstring-content-error">
         <inherit scheme="REstring-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="REstring-Attributes"/>
      <scheme name="REstring-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="REstring-content-error"/>
         </inherit>
      </scheme>
      <!--
			xmlss: support attributes for language 'xpath', schemes '(Quot|Apos)XML.Pattern'
		-->
<scheme name="xmlss-xpath-XML.Pattern-attr">
         <block start="/~'?#1\M([^']|$)/" end="/\M'/" scheme="xpath:QuotXML.Pattern"
                region="def:default"/>
         <block start="/~&#34;?#1\M([^&#34;]|$)/" end="/\M&#34;/" scheme="xpath:AposXML.Pattern"
                region="def:default"/>
      </scheme>
      <!--custom schemes from '../../src/xmlschema/src/custom.xsd.xml'--><region name="Scheme.nsprefix" parent="xml:QName.nsprefix"/>
      <region name="Scheme.nscolon" parent="xml:QName.nscolon"/>
      <region name="Scheme.name" parent="xml:QName.name"/>
      <region name="ns.spec" parent="xml:nsprefix"/>
      <region name="ns.spec.mark" parent="uri:delit"/>
      <scheme name="QName-content"><!-- fix for lists... --><regexp match="/(?{}~|\s?#1)((%xml:NCName;)(\:))?(%xml:NCName;) \b/ix"
                 region2="Scheme.nsprefix"
                 region3="Scheme.nscolon"
                 region4="Scheme.name"/>
      </scheme>
      <scheme name="xpath-type-content">
         <regexp match="/[\[\]]|\.{2}/" region="def:Error"/>
         <inherit scheme="xmlss-xpath-XML.Pattern-attr"><!-- @ deny --><virtual scheme="xpath:Pattern" subst-scheme="PatternNoAttr"/>
         </inherit>
      </scheme>
      <scheme name="xpath-type-attr-content">
         <inherit scheme="xmlss-xpath-XML.Pattern-attr"><!-- @ allow --><virtual scheme="xpath:Pattern" subst-scheme="Pattern"/>
         </inherit>
      </scheme>
      <scheme name="Pattern">
         <regexp match="/[\[\]]/" region="def:Error"/>
         <inherit scheme="xpath:Pattern"/>
      </scheme>
      <scheme name="PatternNoAttr">
         <regexp match="/\battribute::|\@/" region="def:Error"/>
         <inherit scheme="Pattern"/>
      </scheme>
      <scheme name="public-content">
         <inherit scheme="uri:FPI"/>
         <inherit scheme="public-content-old"/>
      </scheme>
      <scheme name="RE-String">
         <annotation>
            <documentation>
        Regexp string. Using package regexp.hrc.
       </documentation>
         </annotation>
         <inherit scheme="regexp:xsd.regexp"><!--virtual scheme="regexp:code" subst-scheme="QName-content"/--><virtual scheme="regexp:string" subst-scheme="xml:Reference"/>
            <virtual scheme="regexp:xsd.regexp" subst-scheme="RE-String"/>
         </inherit>
      </scheme>
      <scheme name="REstring-content">
         <inherit scheme="RE-String"/>
         <inherit scheme="string-content"/>
      </scheme>
      <scheme name="anyURI-content">
         <inherit scheme="uri:uri"/>
      </scheme>
      <scheme name="namespaceList-list">
         <keywords region="ns.spec" worddiv="[\s#'&#34;]">
            <word name="any"/>
            <word name="other"/>
            <word name="local"/>
            <word name="targetNamespace"/>
         </keywords>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="namespaceList-content">
         <block start="/(~|\s?#1)(##)\M\w+\b/" end="/~\w+\b\m/" scheme="namespaceList-list"
                region02="ns.spec.mark"/>
         <inherit scheme="anyURI-content"/>
      </scheme>
      <scheme name="anyType-content"/>
      <scheme name="anySimpleType-content"/>
      <scheme name="anySimpleType-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="anySimpleType-content"/>
         </inherit>
      </scheme>
      <scheme name="string-content">
         <regexp match="/[%xml:Char;]/" priority="low"/>
      </scheme>
      <scheme name="boolean-content">
         <regexp match="/\b(true|1)\b/" region="BooleanConstant"/>
         <regexp match="/\b(false|0)\b/" region="BooleanConstant"/>
      </scheme>
      <scheme name="decimal-content">
         <regexp match="/ [\-+]? (\d+\.?\d* | \.\d+\b) /ix" region="Number"/>
      </scheme>
      <scheme name="float-content">
         <inherit scheme="FloatNumber"/>
         <regexp match="/ INF|-INF|NaN /x" region="Number"/>
      </scheme>
      <scheme name="double-content">
         <inherit scheme="float-content"/>
      </scheme>
      <scheme name="duration-content">
         <regexp match="/[\-+]? P \d+Y \d+M \d+D (T \d+H \d+M (\d+(\.\d*)?)S)? /x" region="Date"/>
      </scheme>
      <scheme name="dateTime-content">
         <regexp match="/[\-+]? \d{4,} - \d\d - \d\d T \d\d:\d\d:(\d\d(\.\d+)?) (Z|[+-]\d\d:\d\d)?/x"
                 region="Date"/>
      </scheme>
      <scheme name="time-content">
         <regexp match="/[\-+]? \d\d:\d\d:(\d\d(\.\d+)?) (Z|[+-]\d\d:\d\d)?/x" region="Date"/>
      </scheme>
      <scheme name="date-content">
         <regexp match="/[\-+]? \d{4,} - \d\d - \d\d/x" region="Date"/>
      </scheme>
      <scheme name="gYearMonth-content">
         <regexp match="/[\-+]? \d{4,} - \d\d/x" region="Date"/>
      </scheme>
      <scheme name="gYear-content">
         <regexp match="/[\-+]? \d{4,}/x" region="Date"/>
      </scheme>
      <scheme name="gMonthDay-content">
         <regexp match="/\-\- \d\d - \d\d/x" region="Date"/>
      </scheme>
      <scheme name="gDay-content">
         <regexp match="/\-\-\- \d\d/x" region="Date"/>
      </scheme>
      <scheme name="gMonth-content">
         <regexp match="/\-\- \d\d \-\-/x" region="Date"/>
      </scheme>
      <scheme name="hexBinary-content">
         <regexp match="/[0-9a-fA-F]+/ix"/>
      </scheme>
      <scheme name="base64Binary-content">
         <regexp match="/[\x3D-\x7A]+/ix"/>
      </scheme>
      <scheme name="NOTATION-content"><!-- It is an ·error· for NOTATION to be used directly in a schema. Only datatypes that are ·derived· from NOTATION by specifying a value for ·enumeration· can be used in a schema. --></scheme>
      <scheme name="normalizedString-content">
         <regexp match="/\t+/" region="xml:badChar"/>
         <inherit scheme="string-content"/>
      </scheme>
      <scheme name="token-content"><!--<regexp match="/\S\s/" priority="low"/>
        <regexp match="/.$|^./" region="xml:badChar"/>
        <regexp match="/\s+/" region="xml:badChar"/>--><inherit scheme="normalizedString-content"/>
      </scheme>
      <scheme name="language-content">
         <inherit scheme="uri:lang"/>
         <!--regexp match="/\b([a-zA-Z]{2}|[iI]-[a-zA-Z]+|[xX]-[a-zA-Z]{1,8})(-[a-zA-Z]{1,8})*\b/ix"/--></scheme>
      <scheme name="NMTOKEN-content">
         <regexp match="/\b %xml:Nmtoken; \b/ix"/>
      </scheme>
      <scheme name="NMTOKENS-content">
         <regexp match="/\b %xml:Nmtoken; \b /ix"/>
      </scheme>
      <scheme name="Name-content">
         <regexp match="/\b %xml:Name; \b/ix"/>
      </scheme>
      <scheme name="NCName-content">
         <regexp match="/\b %xml:NCName; \b/ix"/>
      </scheme>
      <scheme name="ID-content">
         <inherit scheme="NCName-content"/>
      </scheme>
      <scheme name="IDREF-content">
         <inherit scheme="NCName-content"/>
      </scheme>
      <scheme name="IDREFS-content">
         <inherit scheme="NCName-content"/>
      </scheme>
      <scheme name="ENTITY-content">
         <inherit scheme="NCName-content"/>
      </scheme>
      <scheme name="ENTITIES-content">
         <inherit scheme="NCName-content"/>
      </scheme>
      <scheme name="integer-content">
         <regexp match="/[-+]?\d+ \b/x" region="NumberDec"/>
      </scheme>
      <scheme name="nonPositiveInteger-content">
         <regexp match="/0 | -\d+ \b/x" region="NumberDec"/>
      </scheme>
      <scheme name="negativeInteger-content">
         <regexp match="/ \- \d+ \b/x" region="NumberDec"/>
      </scheme>
      <scheme name="nonNegativeInteger-content">
         <regexp match="/\+? \d+ \b/x" region="NumberDec"/>
      </scheme>
      <scheme name="positiveInteger-content">
         <regexp match="/\+? \d+ \b/x" region="NumberDec"/>
      </scheme>
      <scheme name="long-content">
         <regexp match="/[\-+]? \d{1,19} \b/x" region="NumberDec"/>
      </scheme>
      <scheme name="int-content">
         <regexp match="/[\-+]? \d{1,10} \b/x" region="NumberDec"/>
      </scheme>
      <scheme name="short-content">
         <regexp match="/[\-+]? \d{1,5} \b/x" region="NumberDec"/>
      </scheme>
      <scheme name="byte-content">
         <regexp match="/[\-+]? \d{1,3} \b/x" region="NumberDec"/>
      </scheme>
      <scheme name="unsignedLong-content">
         <regexp match="/\d{1,19} \b/x" region="NumberDec"/>
      </scheme>
      <scheme name="unsignedInt-content">
         <regexp match="/\d{1,10} \b/x" region="NumberDec"/>
      </scheme>
      <scheme name="unsignedShort-content">
         <regexp match="/\d{1,5} \b/x" region="NumberDec"/>
      </scheme>
      <scheme name="unsignedByte-content">
         <regexp match="/\d{1,3} \b/x" region="NumberDec"/>
      </scheme>
      <!--end custom--><scheme name="schemaTop-group">
         <inherit scheme="redefinable-group"/>
         <inherit scheme="element-element"/>
         <inherit scheme="attribute-element"/>
         <inherit scheme="notation-element"/>
      </scheme>
      <scheme name="redefinable-group">
         <inherit scheme="simpleType-element"/>
         <inherit scheme="complexType-element"/>
         <inherit scheme="group-element"/>
         <inherit scheme="attributeGroup-element"/>
      </scheme>
      <scheme name="schema-element">
         <regexp match="/\M (&lt; %nsprefix;schema \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="schemaOutlined"/>
         <block start="/\M &lt; (%nsprefix;schema ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e105-elementContent"/>
      </scheme>
      <scheme name="occurs-attributeGroup">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(minOccurs)\M([\s\=]|$)/x"
                scheme="nonNegativeInteger-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(maxOccurs)\M([\s\=]|$)/x"
                scheme="allNNI-AttributeContent"/>
      </scheme>
      <scheme name="defRef-attributeGroup">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(name)\M([\s\=]|$)/x"
                scheme="NCName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name" start="/(\s?#1|^)(ref)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
      </scheme>
      <scheme name="typeDefParticle-group">
         <regexp match="/\M (&lt; %nsprefix;group \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="groupOutlined"/>
         <block start="/\M &lt; (%nsprefix;group ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="groupRef-elementContent"/>
         <inherit scheme="all-element"/>
         <inherit scheme="choice-element"/>
         <inherit scheme="sequence-element"/>
      </scheme>
      <scheme name="nestedParticle-group">
         <regexp match="/\M (&lt; %nsprefix;element \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="elementOutlined"/>
         <block start="/\M &lt; (%nsprefix;element ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="localElement-elementContent"/>
         <regexp match="/\M (&lt; %nsprefix;group \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="groupOutlined"/>
         <block start="/\M &lt; (%nsprefix;group ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="groupRef-elementContent"/>
         <inherit scheme="choice-element"/>
         <inherit scheme="sequence-element"/>
         <inherit scheme="any-element"/>
      </scheme>
      <scheme name="particle-group">
         <regexp match="/\M (&lt; %nsprefix;element \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="elementOutlined"/>
         <block start="/\M &lt; (%nsprefix;element ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="localElement-elementContent"/>
         <regexp match="/\M (&lt; %nsprefix;group \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="groupOutlined"/>
         <block start="/\M &lt; (%nsprefix;group ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="groupRef-elementContent"/>
         <inherit scheme="all-element"/>
         <inherit scheme="choice-element"/>
         <inherit scheme="sequence-element"/>
         <inherit scheme="any-element"/>
      </scheme>
      <scheme name="attrDecls-group">
         <regexp match="/\M (&lt; %nsprefix;attribute \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="attributeOutlined"/>
         <block start="/\M &lt; (%nsprefix;attribute ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="attribute-elementContent"/>
         <regexp match="/\M (&lt; %nsprefix;attributeGroup \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="attributeGroupOutlined"/>
         <block start="/\M &lt; (%nsprefix;attributeGroup ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="attributeGroupRef-elementContent"/>
         <inherit scheme="anyAttribute-element"/>
      </scheme>
      <scheme name="anyAttribute-element">
         <block start="/\M &lt; (%nsprefix;anyAttribute ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="wildcard-elementContent"/>
      </scheme>
      <scheme name="complexTypeModel-group">
         <inherit scheme="simpleContent-element"/>
         <inherit scheme="complexContent-element"/>
         <inherit scheme="typeDefParticle-group"/>
         <inherit scheme="attrDecls-group"/>
      </scheme>
      <scheme name="complexContent-element">
         <block start="/\M &lt; (%nsprefix;complexContent ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e302-elementContent"/>
      </scheme>
      <scheme name="simpleContent-element">
         <block start="/\M &lt; (%nsprefix;simpleContent ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e338-elementContent"/>
      </scheme>
      <scheme name="complexType-element">
         <regexp match="/\M (&lt; %nsprefix;complexType \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="complexTypeOutlined"/>
         <block start="/\M &lt; (%nsprefix;complexType ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="topLevelComplexType-elementContent"/>
      </scheme>
      <scheme name="element-element">
         <regexp match="/\M (&lt; %nsprefix;element \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="elementOutlined"/>
         <block start="/\M &lt; (%nsprefix;element ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="topLevelElement-elementContent"/>
      </scheme>
      <scheme name="allModel-group">
         <inherit scheme="annotation-element"/>
         <regexp match="/\M (&lt; %nsprefix;element \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="elementOutlined"/>
         <block start="/\M &lt; (%nsprefix;element ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="narrowMaxMin-elementContent"/>
      </scheme>
      <scheme name="all-element">
         <block start="/\M &lt; (%nsprefix;all ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="all-elementContent"/>
      </scheme>
      <scheme name="choice-element">
         <block start="/\M &lt; (%nsprefix;choice ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="explicitGroup-elementContent"/>
      </scheme>
      <scheme name="sequence-element">
         <block start="/\M &lt; (%nsprefix;sequence ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="explicitGroup-elementContent"/>
      </scheme>
      <scheme name="group-element">
         <regexp match="/\M (&lt; %nsprefix;group \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="groupOutlined"/>
         <block start="/\M &lt; (%nsprefix;group ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="namedGroup-elementContent"/>
      </scheme>
      <scheme name="any-element">
         <block start="/\M &lt; (%nsprefix;any ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e562-elementContent"/>
      </scheme>
      <scheme name="attribute-element">
         <regexp match="/\M (&lt; %nsprefix;attribute \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="attributeOutlined"/>
         <block start="/\M &lt; (%nsprefix;attribute ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="topLevelAttribute-elementContent"/>
      </scheme>
      <scheme name="attributeGroup-element">
         <regexp match="/\M (&lt; %nsprefix;attributeGroup \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="attributeGroupOutlined"/>
         <block start="/\M &lt; (%nsprefix;attributeGroup ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="namedAttributeGroup-elementContent"/>
      </scheme>
      <scheme name="include-element">
         <regexp match="/\M (&lt; %nsprefix;include \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="includeOutlined"/>
         <block start="/\M &lt; (%nsprefix;include ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e620-elementContent"/>
      </scheme>
      <scheme name="redefine-element">
         <block start="/\M &lt; (%nsprefix;redefine ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e627-elementContent"/>
      </scheme>
      <scheme name="import-element">
         <regexp match="/\M (&lt; %nsprefix;import \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="importOutlined"/>
         <block start="/\M &lt; (%nsprefix;import ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e639-elementContent"/>
      </scheme>
      <scheme name="selector-element">
         <block start="/\M &lt; (%nsprefix;selector ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e647-elementContent"/>
      </scheme>
      <scheme name="field-element">
         <block start="/\M &lt; (%nsprefix;field ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e665-elementContent"/>
      </scheme>
      <scheme name="identityConstraint-group">
         <inherit scheme="unique-element"/>
         <inherit scheme="key-element"/>
         <inherit scheme="keyref-element"/>
      </scheme>
      <scheme name="unique-element">
         <block start="/\M &lt; (%nsprefix;unique ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="keybase-elementContent"/>
      </scheme>
      <scheme name="key-element">
         <block start="/\M &lt; (%nsprefix;key ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="keybase-elementContent"/>
      </scheme>
      <scheme name="keyref-element">
         <block start="/\M &lt; (%nsprefix;keyref ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e704-elementContent"/>
      </scheme>
      <scheme name="notation-element">
         <block start="/\M &lt; (%nsprefix;notation ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e711-elementContent"/>
      </scheme>
      <scheme name="appinfo-element">
         <block start="/\M &lt; (%nsprefix;appinfo ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e727-elementContent"/>
      </scheme>
      <scheme name="documentation-element">
         <block start="/\M &lt; (%nsprefix;documentation ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e736-elementContent"/>
      </scheme>
      <scheme name="annotation-element">
         <regexp match="/\M (&lt; %nsprefix;annotation \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="annotationOutlined"/>
         <block start="/\M &lt; (%nsprefix;annotation ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e745-elementContent"/>
      </scheme>
      <scheme name="simpleDerivation-group">
         <inherit scheme="restriction-element"/>
         <inherit scheme="list-element"/>
         <inherit scheme="union-element"/>
      </scheme>
      <scheme name="simpleType-element">
         <regexp match="/\M (&lt; %nsprefix;simpleType \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="simpleTypeOutlined"/>
         <block start="/\M &lt; (%nsprefix;simpleType ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="topLevelSimpleType-elementContent"/>
      </scheme>
      <scheme name="facets-group">
         <inherit scheme="minExclusive-element"/>
         <inherit scheme="minInclusive-element"/>
         <inherit scheme="maxExclusive-element"/>
         <inherit scheme="maxInclusive-element"/>
         <inherit scheme="totalDigits-element"/>
         <inherit scheme="fractionDigits-element"/>
         <inherit scheme="length-element"/>
         <inherit scheme="minLength-element"/>
         <inherit scheme="maxLength-element"/>
         <inherit scheme="enumeration-element"/>
         <inherit scheme="whiteSpace-element"/>
         <inherit scheme="pattern-element"/>
      </scheme>
      <scheme name="simpleRestrictionModel-group">
         <regexp match="/\M (&lt; %nsprefix;simpleType \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="simpleTypeOutlined"/>
         <block start="/\M &lt; (%nsprefix;simpleType ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="localSimpleType-elementContent"/>
         <inherit scheme="facets-group"/>
      </scheme>
      <scheme name="restriction-element">
         <block start="/\M &lt; (%nsprefix;restriction ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e1368-elementContent"/>
      </scheme>
      <scheme name="list-element">
         <block start="/\M &lt; (%nsprefix;list ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e1377-elementContent"/>
      </scheme>
      <scheme name="union-element">
         <block start="/\M &lt; (%nsprefix;union ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e1387-elementContent"/>
      </scheme>
      <scheme name="minExclusive-element">
         <block start="/\M &lt; (%nsprefix;minExclusive ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="facet-elementContent"/>
      </scheme>
      <scheme name="minInclusive-element">
         <block start="/\M &lt; (%nsprefix;minInclusive ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="facet-elementContent"/>
      </scheme>
      <scheme name="maxExclusive-element">
         <block start="/\M &lt; (%nsprefix;maxExclusive ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="facet-elementContent"/>
      </scheme>
      <scheme name="maxInclusive-element">
         <block start="/\M &lt; (%nsprefix;maxInclusive ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="facet-elementContent"/>
      </scheme>
      <scheme name="totalDigits-element">
         <block start="/\M &lt; (%nsprefix;totalDigits ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e1433-elementContent"/>
      </scheme>
      <scheme name="fractionDigits-element">
         <block start="/\M &lt; (%nsprefix;fractionDigits ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="numFacet-elementContent"/>
      </scheme>
      <scheme name="length-element">
         <block start="/\M &lt; (%nsprefix;length ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="numFacet-elementContent"/>
      </scheme>
      <scheme name="minLength-element">
         <block start="/\M &lt; (%nsprefix;minLength ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="numFacet-elementContent"/>
      </scheme>
      <scheme name="maxLength-element">
         <block start="/\M &lt; (%nsprefix;maxLength ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="numFacet-elementContent"/>
      </scheme>
      <scheme name="enumeration-element">
         <block start="/\M &lt; (%nsprefix;enumeration ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="noFixedFacet-elementContent"/>
      </scheme>
      <scheme name="whiteSpace-element">
         <block start="/\M &lt; (%nsprefix;whiteSpace ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e1459-elementContent"/>
      </scheme>
      <scheme name="pattern-element">
         <block start="/\M &lt; (%nsprefix;pattern ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e1474-elementContent"/>
      </scheme>
      <scheme name="openAttrs-content"/>
      <scheme name="openAttrs-content-error">
         <inherit scheme="openAttrs-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="openAttrs-content-cdsect">
         <inherit scheme="openAttrs-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="openAttrs-Attributes">
         <inherit scheme="anyType-Attributes"/>
      </scheme>
      <scheme name="openAttrs-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="openAttrs-content"/>
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="openAttrs-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="openAttrs-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="annotated-content">
         <inherit scheme="annotation-element"/>
         <inherit scheme="openAttrs-content"/>
      </scheme>
      <scheme name="annotated-content-error">
         <inherit scheme="annotated-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="annotated-content-cdsect">
         <inherit scheme="annotated-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="annotated-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name" start="/(\s?#1|^)(id)\M([\s\=]|$)/x"
                scheme="ID-AttributeContent"/>
         <inherit scheme="openAttrs-Attributes"/>
      </scheme>
      <scheme name="annotated-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="annotated-content"/>
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="annotated-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="annotated-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="formChoice-content">
         <regexp region="Enumeration" match="/qualified/"/>
         <regexp region="Enumeration" match="/unqualified/"/>
      </scheme>
      <scheme name="formChoice-content-error">
         <inherit scheme="formChoice-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="formChoice-content-cdsect">
         <inherit scheme="formChoice-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="formChoice-Attributes"/>
      <scheme name="formChoice-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="formChoice-content-error"/>
         </inherit>
      </scheme>
      <scheme name="formChoice-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="formChoice-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="formChoice-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="formChoice-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="reducedDerivationControl-content">
         <regexp region="Enumeration" match="/extension/"/>
         <regexp region="Enumeration" match="/restriction/"/>
      </scheme>
      <scheme name="reducedDerivationControl-content-error">
         <inherit scheme="reducedDerivationControl-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="reducedDerivationControl-content-cdsect">
         <inherit scheme="reducedDerivationControl-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="reducedDerivationControl-Attributes"/>
      <scheme name="reducedDerivationControl-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="reducedDerivationControl-content-error"/>
         </inherit>
      </scheme>
      <scheme name="reducedDerivationControl-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="reducedDerivationControl-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream"
                     subst-scheme="reducedDerivationControl-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="reducedDerivationControl-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="derivationSet-content"><!--union:--><inherit scheme="_hrc_int_d12e75-content"/>
         <inherit scheme="_hrc_int_d12e78-content"/>
      </scheme>
      <scheme name="derivationSet-content-error">
         <inherit scheme="derivationSet-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="derivationSet-content-cdsect">
         <inherit scheme="derivationSet-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="derivationSet-Attributes"/>
      <scheme name="derivationSet-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="derivationSet-content-error"/>
         </inherit>
      </scheme>
      <scheme name="derivationSet-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="derivationSet-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="derivationSet-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="derivationSet-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e75-content">
         <regexp region="Enumeration" match="/#all/"/>
      </scheme>
      <scheme name="_hrc_int_d12e75-content-error">
         <inherit scheme="_hrc_int_d12e75-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e75-Attributes"/>
      <scheme name="_hrc_int_d12e75-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e75-content-error"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e78-content"><!--list:--><inherit scheme="reducedDerivationControl-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e78-content-error">
         <inherit scheme="_hrc_int_d12e78-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e78-Attributes"/>
      <scheme name="_hrc_int_d12e78-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e78-content-error"/>
         </inherit>
      </scheme>
      <scheme name="typeDerivationControl-content">
         <regexp region="Enumeration" match="/extension/"/>
         <regexp region="Enumeration" match="/restriction/"/>
         <regexp region="Enumeration" match="/list/"/>
         <regexp region="Enumeration" match="/union/"/>
      </scheme>
      <scheme name="typeDerivationControl-content-error">
         <inherit scheme="typeDerivationControl-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="typeDerivationControl-content-cdsect">
         <inherit scheme="typeDerivationControl-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="typeDerivationControl-Attributes"/>
      <scheme name="typeDerivationControl-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="typeDerivationControl-content-error"/>
         </inherit>
      </scheme>
      <scheme name="typeDerivationControl-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="typeDerivationControl-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream"
                     subst-scheme="typeDerivationControl-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="typeDerivationControl-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="fullDerivationSet-content"><!--union:--><inherit scheme="_hrc_int_d12e97-content"/>
         <inherit scheme="_hrc_int_d12e100-content"/>
      </scheme>
      <scheme name="fullDerivationSet-content-error">
         <inherit scheme="fullDerivationSet-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="fullDerivationSet-content-cdsect">
         <inherit scheme="fullDerivationSet-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="fullDerivationSet-Attributes"/>
      <scheme name="fullDerivationSet-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="fullDerivationSet-content-error"/>
         </inherit>
      </scheme>
      <scheme name="fullDerivationSet-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="fullDerivationSet-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream"
                     subst-scheme="fullDerivationSet-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="fullDerivationSet-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e97-content">
         <regexp region="Enumeration" match="/#all/"/>
      </scheme>
      <scheme name="_hrc_int_d12e97-content-error">
         <inherit scheme="_hrc_int_d12e97-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e97-Attributes"/>
      <scheme name="_hrc_int_d12e97-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e97-content-error"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e100-content"><!--list:--><inherit scheme="typeDerivationControl-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e100-content-error">
         <inherit scheme="_hrc_int_d12e100-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e100-Attributes"/>
      <scheme name="_hrc_int_d12e100-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e100-content-error"/>
         </inherit>
      </scheme>
      <!--
        parent: schema
-->
<scheme name="_hrc_int_d12e105-content">
         <inherit scheme="include-element"/>
         <inherit scheme="import-element"/>
         <inherit scheme="redefine-element"/>
         <inherit scheme="annotation-element"/>
         <inherit scheme="schemaTop-group"/>
         <inherit scheme="annotation-element"/>
         <inherit scheme="openAttrs-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e105-content-error">
         <inherit scheme="_hrc_int_d12e105-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e105-content-cdsect">
         <inherit scheme="_hrc_int_d12e105-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e105-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(targetNamespace)\M([\s\=]|$)/x"
                scheme="anyURI-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(version)\M([\s\=]|$)/x"
                scheme="token-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(finalDefault)\M([\s\=]|$)/x"
                scheme="fullDerivationSet-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(blockDefault)\M([\s\=]|$)/x"
                scheme="blockSet-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(attributeFormDefault)\M([\s\=]|$)/x"
                scheme="formChoice-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(elementFormDefault)\M([\s\=]|$)/x"
                scheme="formChoice-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name" start="/(\s?#1|^)(id)\M([\s\=]|$)/x"
                scheme="ID-AttributeContent"/>
         <inherit scheme="xmlns:lang-attribute"/>
         <inherit scheme="openAttrs-Attributes"/>
      </scheme>
      <scheme name="_hrc_int_d12e105-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e105-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="_hrc_int_d12e105-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e105-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="allNNI-content"><!--union:--><inherit scheme="nonNegativeInteger-content"/>
         <inherit scheme="_hrc_int_d12e151-content"/>
      </scheme>
      <scheme name="allNNI-content-error">
         <inherit scheme="allNNI-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="allNNI-content-cdsect">
         <inherit scheme="allNNI-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="allNNI-Attributes"/>
      <scheme name="allNNI-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="allNNI-content-error"/>
         </inherit>
      </scheme>
      <scheme name="allNNI-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="allNNI-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="allNNI-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="allNNI-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e151-content">
         <regexp region="Enumeration" match="/unbounded/"/>
      </scheme>
      <scheme name="_hrc_int_d12e151-content-error">
         <inherit scheme="_hrc_int_d12e151-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e151-Attributes"/>
      <scheme name="_hrc_int_d12e151-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e151-content-error"/>
         </inherit>
      </scheme>
      <scheme name="attribute-content">
         <regexp match="/\M (&lt; %nsprefix;simpleType \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="simpleTypeOutlined"/>
         <block start="/\M &lt; (%nsprefix;simpleType ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="localSimpleType-elementContent"/>
         <inherit scheme="annotated-content"/>
      </scheme>
      <scheme name="attribute-content-error">
         <inherit scheme="attribute-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="attribute-content-cdsect">
         <inherit scheme="attribute-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="attribute-Attributes">
         <inherit scheme="defRef-attributeGroup"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(type)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name" start="/(\s?#1|^)(use)\M([\s\=]|$)/x"
                scheme="_hrc_int_d12e198-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(default)\M([\s\=]|$)/x"
                scheme="string-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(fixed)\M([\s\=]|$)/x"
                scheme="string-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(form)\M([\s\=]|$)/x"
                scheme="formChoice-AttributeContent"/>
         <inherit scheme="annotated-Attributes"/>
      </scheme>
      <scheme name="attribute-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="attribute-content"/>
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="attribute-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="attribute-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: use
-->
<scheme name="_hrc_int_d12e198-content">
         <regexp region="Enumeration" match="/prohibited/"/>
         <regexp region="Enumeration" match="/optional/"/>
         <regexp region="Enumeration" match="/required/"/>
      </scheme>
      <scheme name="_hrc_int_d12e198-content-error">
         <inherit scheme="_hrc_int_d12e198-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e198-Attributes"/>
      <scheme name="_hrc_int_d12e198-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e198-content-error"/>
         </inherit>
      </scheme>
      <scheme name="topLevelAttribute-content">
         <inherit scheme="annotation-element"/>
         <regexp match="/\M (&lt; %nsprefix;simpleType \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="simpleTypeOutlined"/>
         <block start="/\M &lt; (%nsprefix;simpleType ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="localSimpleType-elementContent"/>
      </scheme>
      <scheme name="topLevelAttribute-content-error">
         <inherit scheme="topLevelAttribute-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="topLevelAttribute-content-cdsect">
         <inherit scheme="topLevelAttribute-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="topLevelAttribute-Attributes">
         <regexp match="/ref/x" region="xml:badChar"/>
         <regexp match="/form/x" region="xml:badChar"/>
         <regexp match="/use/x" region="xml:badChar"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(name)\M([\s\=]|$)/x"
                scheme="NCName-AttributeContent"/>
         <inherit scheme="attribute-Attributes"/>
      </scheme>
      <scheme name="topLevelAttribute-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="topLevelAttribute-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="topLevelAttribute-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="topLevelAttribute-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="complexType-content">
         <inherit scheme="complexTypeModel-group"/>
         <inherit scheme="annotated-content"/>
      </scheme>
      <scheme name="complexType-content-error">
         <inherit scheme="complexType-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="complexType-content-cdsect">
         <inherit scheme="complexType-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="complexType-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(name)\M([\s\=]|$)/x"
                scheme="NCName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(mixed)\M([\s\=]|$)/x"
                scheme="boolean-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(abstract)\M([\s\=]|$)/x"
                scheme="boolean-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(final)\M([\s\=]|$)/x"
                scheme="derivationSet-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(block)\M([\s\=]|$)/x"
                scheme="derivationSet-AttributeContent"/>
         <inherit scheme="annotated-Attributes"/>
      </scheme>
      <scheme name="complexType-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="complexType-content"/>
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="complexType-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="complexType-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="topLevelComplexType-content">
         <inherit scheme="annotation-element"/>
         <inherit scheme="complexTypeModel-group"/>
      </scheme>
      <scheme name="topLevelComplexType-content-error">
         <inherit scheme="topLevelComplexType-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="topLevelComplexType-content-cdsect">
         <inherit scheme="topLevelComplexType-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="topLevelComplexType-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(name)\M([\s\=]|$)/x"
                scheme="NCName-AttributeContent"/>
         <inherit scheme="complexType-Attributes"/>
      </scheme>
      <scheme name="topLevelComplexType-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="topLevelComplexType-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="topLevelComplexType-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="topLevelComplexType-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="localComplexType-content">
         <inherit scheme="annotation-element"/>
         <inherit scheme="complexTypeModel-group"/>
      </scheme>
      <scheme name="localComplexType-content-error">
         <inherit scheme="localComplexType-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="localComplexType-content-cdsect">
         <inherit scheme="localComplexType-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="localComplexType-Attributes">
         <regexp match="/name/x" region="xml:badChar"/>
         <regexp match="/abstract/x" region="xml:badChar"/>
         <regexp match="/final/x" region="xml:badChar"/>
         <regexp match="/block/x" region="xml:badChar"/>
         <inherit scheme="complexType-Attributes"/>
      </scheme>
      <scheme name="localComplexType-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="localComplexType-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="localComplexType-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="localComplexType-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="restrictionType-content">
         <inherit scheme="typeDefParticle-group"/>
         <inherit scheme="simpleRestrictionModel-group"/>
         <inherit scheme="attrDecls-group"/>
         <inherit scheme="annotated-content"/>
      </scheme>
      <scheme name="restrictionType-content-error">
         <inherit scheme="restrictionType-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="restrictionType-content-cdsect">
         <inherit scheme="restrictionType-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="restrictionType-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(base)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <inherit scheme="annotated-Attributes"/>
      </scheme>
      <scheme name="restrictionType-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="restrictionType-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="restrictionType-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="restrictionType-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="complexRestrictionType-content">
         <inherit scheme="annotation-element"/>
         <inherit scheme="typeDefParticle-group"/>
         <inherit scheme="attrDecls-group"/>
      </scheme>
      <scheme name="complexRestrictionType-content-error">
         <inherit scheme="complexRestrictionType-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="complexRestrictionType-content-cdsect">
         <inherit scheme="complexRestrictionType-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="complexRestrictionType-Attributes">
         <inherit scheme="restrictionType-Attributes"/>
      </scheme>
      <scheme name="complexRestrictionType-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="complexRestrictionType-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="complexRestrictionType-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="complexRestrictionType-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="extensionType-content">
         <inherit scheme="typeDefParticle-group"/>
         <inherit scheme="attrDecls-group"/>
         <inherit scheme="annotated-content"/>
      </scheme>
      <scheme name="extensionType-content-error">
         <inherit scheme="extensionType-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="extensionType-content-cdsect">
         <inherit scheme="extensionType-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="extensionType-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(base)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <inherit scheme="annotated-Attributes"/>
      </scheme>
      <scheme name="extensionType-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="extensionType-content"/>
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="extensionType-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="extensionType-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: complexContent
-->
<scheme name="_hrc_int_d12e302-content">
         <block start="/\M &lt; (%nsprefix;restriction ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="complexRestrictionType-elementContent"/>
         <block start="/\M &lt; (%nsprefix;extension ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="extensionType-elementContent"/>
         <inherit scheme="annotated-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e302-content-error">
         <inherit scheme="_hrc_int_d12e302-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e302-content-cdsect">
         <inherit scheme="_hrc_int_d12e302-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e302-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(mixed)\M([\s\=]|$)/x"
                scheme="boolean-AttributeContent"/>
         <inherit scheme="annotated-Attributes"/>
      </scheme>
      <scheme name="_hrc_int_d12e302-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e302-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="_hrc_int_d12e302-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e302-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="simpleRestrictionType-content">
         <inherit scheme="annotation-element"/>
         <inherit scheme="simpleRestrictionModel-group"/>
         <inherit scheme="attrDecls-group"/>
      </scheme>
      <scheme name="simpleRestrictionType-content-error">
         <inherit scheme="simpleRestrictionType-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="simpleRestrictionType-content-cdsect">
         <inherit scheme="simpleRestrictionType-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="simpleRestrictionType-Attributes">
         <inherit scheme="restrictionType-Attributes"/>
      </scheme>
      <scheme name="simpleRestrictionType-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="simpleRestrictionType-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="simpleRestrictionType-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="simpleRestrictionType-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="simpleExtensionType-content">
         <inherit scheme="annotation-element"/>
         <inherit scheme="attrDecls-group"/>
      </scheme>
      <scheme name="simpleExtensionType-content-error">
         <inherit scheme="simpleExtensionType-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="simpleExtensionType-content-cdsect">
         <inherit scheme="simpleExtensionType-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="simpleExtensionType-Attributes">
         <inherit scheme="extensionType-Attributes"/>
      </scheme>
      <scheme name="simpleExtensionType-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="simpleExtensionType-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="simpleExtensionType-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="simpleExtensionType-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: simpleContent
-->
<scheme name="_hrc_int_d12e338-content">
         <block start="/\M &lt; (%nsprefix;restriction ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="simpleRestrictionType-elementContent"/>
         <block start="/\M &lt; (%nsprefix;extension ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="simpleExtensionType-elementContent"/>
         <inherit scheme="annotated-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e338-content-error">
         <inherit scheme="_hrc_int_d12e338-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e338-content-cdsect">
         <inherit scheme="_hrc_int_d12e338-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e338-Attributes">
         <inherit scheme="annotated-Attributes"/>
      </scheme>
      <scheme name="_hrc_int_d12e338-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e338-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="_hrc_int_d12e338-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e338-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="blockSet-content"><!--union:--><inherit scheme="_hrc_int_d12e354-content"/>
         <inherit scheme="_hrc_int_d12e357-content"/>
      </scheme>
      <scheme name="blockSet-content-error">
         <inherit scheme="blockSet-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="blockSet-content-cdsect">
         <inherit scheme="blockSet-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="blockSet-Attributes"/>
      <scheme name="blockSet-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="blockSet-content-error"/>
         </inherit>
      </scheme>
      <scheme name="blockSet-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="blockSet-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="blockSet-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="blockSet-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e354-content">
         <regexp region="Enumeration" match="/#all/"/>
      </scheme>
      <scheme name="_hrc_int_d12e354-content-error">
         <inherit scheme="_hrc_int_d12e354-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e354-Attributes"/>
      <scheme name="_hrc_int_d12e354-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e354-content-error"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e357-content"><!--list:--><inherit scheme="_hrc_int_d12e359-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e357-content-error">
         <inherit scheme="_hrc_int_d12e357-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e357-Attributes"/>
      <scheme name="_hrc_int_d12e357-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e357-content-error"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e359-content">
         <regexp region="Enumeration" match="/extension/"/>
         <regexp region="Enumeration" match="/restriction/"/>
         <regexp region="Enumeration" match="/substitution/"/>
      </scheme>
      <scheme name="_hrc_int_d12e359-content-error">
         <inherit scheme="_hrc_int_d12e359-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e359-Attributes"/>
      <scheme name="_hrc_int_d12e359-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e359-content-error"/>
         </inherit>
      </scheme>
      <scheme name="element-content">
         <regexp match="/\M (&lt; %nsprefix;simpleType \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="simpleTypeOutlined"/>
         <block start="/\M &lt; (%nsprefix;simpleType ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="localSimpleType-elementContent"/>
         <regexp match="/\M (&lt; %nsprefix;complexType \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="complexTypeOutlined"/>
         <block start="/\M &lt; (%nsprefix;complexType ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="localComplexType-elementContent"/>
         <inherit scheme="identityConstraint-group"/>
         <inherit scheme="annotated-content"/>
      </scheme>
      <scheme name="element-content-error">
         <inherit scheme="element-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="element-content-cdsect">
         <inherit scheme="element-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="element-Attributes">
         <inherit scheme="defRef-attributeGroup"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(type)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(substitutionGroup)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <inherit scheme="occurs-attributeGroup"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(default)\M([\s\=]|$)/x"
                scheme="string-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(fixed)\M([\s\=]|$)/x"
                scheme="string-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(nillable)\M([\s\=]|$)/x"
                scheme="boolean-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(abstract)\M([\s\=]|$)/x"
                scheme="boolean-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(final)\M([\s\=]|$)/x"
                scheme="derivationSet-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(block)\M([\s\=]|$)/x"
                scheme="blockSet-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(form)\M([\s\=]|$)/x"
                scheme="formChoice-AttributeContent"/>
         <inherit scheme="annotated-Attributes"/>
      </scheme>
      <scheme name="element-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="element-content"/>
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="element-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="element-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="topLevelElement-content">
         <inherit scheme="annotation-element"/>
         <regexp match="/\M (&lt; %nsprefix;simpleType \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="simpleTypeOutlined"/>
         <block start="/\M &lt; (%nsprefix;simpleType ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="localSimpleType-elementContent"/>
         <regexp match="/\M (&lt; %nsprefix;complexType \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="complexTypeOutlined"/>
         <block start="/\M &lt; (%nsprefix;complexType ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="localComplexType-elementContent"/>
         <inherit scheme="identityConstraint-group"/>
      </scheme>
      <scheme name="topLevelElement-content-error">
         <inherit scheme="topLevelElement-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="topLevelElement-content-cdsect">
         <inherit scheme="topLevelElement-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="topLevelElement-Attributes">
         <regexp match="/ref/x" region="xml:badChar"/>
         <regexp match="/form/x" region="xml:badChar"/>
         <regexp match="/minOccurs/x" region="xml:badChar"/>
         <regexp match="/maxOccurs/x" region="xml:badChar"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(name)\M([\s\=]|$)/x"
                scheme="NCName-AttributeContent"/>
         <inherit scheme="element-Attributes"/>
      </scheme>
      <scheme name="topLevelElement-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="topLevelElement-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="topLevelElement-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="topLevelElement-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="localElement-content">
         <inherit scheme="annotation-element"/>
         <regexp match="/\M (&lt; %nsprefix;simpleType \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="simpleTypeOutlined"/>
         <block start="/\M &lt; (%nsprefix;simpleType ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="localSimpleType-elementContent"/>
         <regexp match="/\M (&lt; %nsprefix;complexType \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="complexTypeOutlined"/>
         <block start="/\M &lt; (%nsprefix;complexType ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="localComplexType-elementContent"/>
         <inherit scheme="identityConstraint-group"/>
      </scheme>
      <scheme name="localElement-content-error">
         <inherit scheme="localElement-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="localElement-content-cdsect">
         <inherit scheme="localElement-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="localElement-Attributes">
         <regexp match="/substitutionGroup/x" region="xml:badChar"/>
         <regexp match="/final/x" region="xml:badChar"/>
         <regexp match="/abstract/x" region="xml:badChar"/>
         <inherit scheme="element-Attributes"/>
      </scheme>
      <scheme name="localElement-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="localElement-content"/>
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="localElement-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="localElement-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="group-content">
         <inherit scheme="particle-group"/>
         <inherit scheme="annotated-content"/>
      </scheme>
      <scheme name="group-content-error">
         <inherit scheme="group-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="group-content-cdsect">
         <inherit scheme="group-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="group-Attributes">
         <inherit scheme="defRef-attributeGroup"/>
         <inherit scheme="occurs-attributeGroup"/>
         <inherit scheme="annotated-Attributes"/>
      </scheme>
      <scheme name="group-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="group-content"/>
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="group-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="group-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="realGroup-content">
         <inherit scheme="annotation-element"/>
         <inherit scheme="all-element"/>
         <inherit scheme="choice-element"/>
         <inherit scheme="sequence-element"/>
      </scheme>
      <scheme name="realGroup-content-error">
         <inherit scheme="realGroup-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="realGroup-content-cdsect">
         <inherit scheme="realGroup-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="realGroup-Attributes">
         <inherit scheme="group-Attributes"/>
      </scheme>
      <scheme name="realGroup-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="realGroup-content"/>
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="realGroup-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="realGroup-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="namedGroup-content">
         <inherit scheme="annotation-element"/>
         <block start="/\M &lt; (%nsprefix;all ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="_hrc_int_d12e444-elementContent"/>
         <block start="/\M &lt; (%nsprefix;choice ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="simpleExplicitGroup-elementContent"/>
         <block start="/\M &lt; (%nsprefix;sequence ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="simpleExplicitGroup-elementContent"/>
      </scheme>
      <scheme name="namedGroup-content-error">
         <inherit scheme="namedGroup-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="namedGroup-content-cdsect">
         <inherit scheme="namedGroup-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="namedGroup-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(name)\M([\s\=]|$)/x"
                scheme="NCName-AttributeContent"/>
         <regexp match="/ref/x" region="xml:badChar"/>
         <regexp match="/minOccurs/x" region="xml:badChar"/>
         <regexp match="/maxOccurs/x" region="xml:badChar"/>
         <inherit scheme="realGroup-Attributes"/>
      </scheme>
      <scheme name="namedGroup-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="namedGroup-content"/>
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="namedGroup-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="namedGroup-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: all
-->
<scheme name="_hrc_int_d12e444-content">
         <inherit scheme="allModel-group"/>
      </scheme>
      <scheme name="_hrc_int_d12e444-content-error">
         <inherit scheme="_hrc_int_d12e444-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e444-content-cdsect">
         <inherit scheme="_hrc_int_d12e444-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e444-Attributes">
         <regexp match="/minOccurs/x" region="xml:badChar"/>
         <regexp match="/maxOccurs/x" region="xml:badChar"/>
         <inherit scheme="all-Attributes"/>
      </scheme>
      <scheme name="_hrc_int_d12e444-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e444-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="_hrc_int_d12e444-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e444-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="groupRef-content">
         <inherit scheme="annotation-element"/>
      </scheme>
      <scheme name="groupRef-content-error">
         <inherit scheme="groupRef-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="groupRef-content-cdsect">
         <inherit scheme="groupRef-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="groupRef-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name" start="/(\s?#1|^)(ref)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <regexp match="/name/x" region="xml:badChar"/>
         <inherit scheme="realGroup-Attributes"/>
      </scheme>
      <scheme name="groupRef-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="groupRef-content"/>
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="groupRef-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="groupRef-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="explicitGroup-content">
         <inherit scheme="annotation-element"/>
         <inherit scheme="nestedParticle-group"/>
      </scheme>
      <scheme name="explicitGroup-content-error">
         <inherit scheme="explicitGroup-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="explicitGroup-content-cdsect">
         <inherit scheme="explicitGroup-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="explicitGroup-Attributes">
         <regexp match="/name/x" region="xml:badChar"/>
         <regexp match="/ref/x" region="xml:badChar"/>
         <inherit scheme="group-Attributes"/>
      </scheme>
      <scheme name="explicitGroup-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="explicitGroup-content"/>
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="explicitGroup-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="explicitGroup-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="simpleExplicitGroup-content">
         <inherit scheme="annotation-element"/>
         <inherit scheme="nestedParticle-group"/>
      </scheme>
      <scheme name="simpleExplicitGroup-content-error">
         <inherit scheme="simpleExplicitGroup-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="simpleExplicitGroup-content-cdsect">
         <inherit scheme="simpleExplicitGroup-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="simpleExplicitGroup-Attributes">
         <regexp match="/minOccurs/x" region="xml:badChar"/>
         <regexp match="/maxOccurs/x" region="xml:badChar"/>
         <inherit scheme="explicitGroup-Attributes"/>
      </scheme>
      <scheme name="simpleExplicitGroup-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="simpleExplicitGroup-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="simpleExplicitGroup-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="simpleExplicitGroup-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="narrowMaxMin-content">
         <inherit scheme="annotation-element"/>
         <regexp match="/\M (&lt; %nsprefix;simpleType \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="simpleTypeOutlined"/>
         <block start="/\M &lt; (%nsprefix;simpleType ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="localSimpleType-elementContent"/>
         <regexp match="/\M (&lt; %nsprefix;complexType \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="complexTypeOutlined"/>
         <block start="/\M &lt; (%nsprefix;complexType ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="localComplexType-elementContent"/>
         <inherit scheme="identityConstraint-group"/>
      </scheme>
      <scheme name="narrowMaxMin-content-error">
         <inherit scheme="narrowMaxMin-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="narrowMaxMin-content-cdsect">
         <inherit scheme="narrowMaxMin-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="narrowMaxMin-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(minOccurs)\M([\s\=]|$)/x"
                scheme="_hrc_int_d12e509-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(maxOccurs)\M([\s\=]|$)/x"
                scheme="_hrc_int_d12e514-AttributeContent"/>
         <inherit scheme="localElement-Attributes"/>
      </scheme>
      <scheme name="narrowMaxMin-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="narrowMaxMin-content"/>
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="narrowMaxMin-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="narrowMaxMin-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: minOccurs
-->
<scheme name="_hrc_int_d12e509-content">
         <regexp region="Enumeration" match="/0/"/>
         <regexp region="Enumeration" match="/1/"/>
      </scheme>
      <scheme name="_hrc_int_d12e509-content-error">
         <inherit scheme="_hrc_int_d12e509-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e509-Attributes"/>
      <scheme name="_hrc_int_d12e509-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e509-content-error"/>
         </inherit>
      </scheme>
      <!--
        parent: maxOccurs
-->
<scheme name="_hrc_int_d12e514-content">
         <regexp region="Enumeration" match="/0/"/>
         <regexp region="Enumeration" match="/1/"/>
      </scheme>
      <scheme name="_hrc_int_d12e514-content-error">
         <inherit scheme="_hrc_int_d12e514-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e514-Attributes"/>
      <scheme name="_hrc_int_d12e514-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e514-content-error"/>
         </inherit>
      </scheme>
      <scheme name="all-content">
         <inherit scheme="allModel-group"/>
      </scheme>
      <scheme name="all-content-error">
         <inherit scheme="all-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="all-content-cdsect">
         <inherit scheme="all-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="all-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(minOccurs)\M([\s\=]|$)/x"
                scheme="_hrc_int_d12e527-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(maxOccurs)\M([\s\=]|$)/x"
                scheme="_hrc_int_d12e532-AttributeContent"/>
         <inherit scheme="explicitGroup-Attributes"/>
      </scheme>
      <scheme name="all-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="all-content"/>
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="all-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="all-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: minOccurs
-->
<scheme name="_hrc_int_d12e527-content">
         <regexp region="Enumeration" match="/0/"/>
         <regexp region="Enumeration" match="/1/"/>
      </scheme>
      <scheme name="_hrc_int_d12e527-content-error">
         <inherit scheme="_hrc_int_d12e527-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e527-Attributes"/>
      <scheme name="_hrc_int_d12e527-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e527-content-error"/>
         </inherit>
      </scheme>
      <!--
        parent: maxOccurs
-->
<scheme name="_hrc_int_d12e532-content">
         <regexp region="Enumeration" match="/1/"/>
      </scheme>
      <scheme name="_hrc_int_d12e532-content-error">
         <inherit scheme="_hrc_int_d12e532-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e532-Attributes"/>
      <scheme name="_hrc_int_d12e532-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e532-content-error"/>
         </inherit>
      </scheme>
      <scheme name="wildcard-content">
         <inherit scheme="annotated-content"/>
      </scheme>
      <scheme name="wildcard-content-error">
         <inherit scheme="wildcard-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="wildcard-content-cdsect">
         <inherit scheme="wildcard-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="wildcard-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(namespace)\M([\s\=]|$)/x"
                scheme="namespaceList-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(processContents)\M([\s\=]|$)/x"
                scheme="_hrc_int_d12e553-AttributeContent"/>
         <inherit scheme="annotated-Attributes"/>
      </scheme>
      <scheme name="wildcard-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="wildcard-content"/>
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="wildcard-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="wildcard-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: processContents
-->
<scheme name="_hrc_int_d12e553-content">
         <regexp region="Enumeration" match="/skip/"/>
         <regexp region="Enumeration" match="/lax/"/>
         <regexp region="Enumeration" match="/strict/"/>
      </scheme>
      <scheme name="_hrc_int_d12e553-content-error">
         <inherit scheme="_hrc_int_d12e553-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e553-Attributes"/>
      <scheme name="_hrc_int_d12e553-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e553-content-error"/>
         </inherit>
      </scheme>
      <!--
        parent: any
-->
<scheme name="_hrc_int_d12e562-content">
         <inherit scheme="wildcard-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e562-content-error">
         <inherit scheme="_hrc_int_d12e562-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e562-content-cdsect">
         <inherit scheme="_hrc_int_d12e562-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e562-Attributes">
         <inherit scheme="occurs-attributeGroup"/>
         <inherit scheme="wildcard-Attributes"/>
      </scheme>
      <scheme name="_hrc_int_d12e562-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e562-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="_hrc_int_d12e562-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e562-Attributes"/>
         </inherit>
      </scheme>
      <!--
   Value is
              ##any      - - any non-conflicting WFXML/attribute at all

              ##other    - - any non-conflicting WFXML/attribute from
                              namespace other than targetNS

              ##local    - - any unqualified non-conflicting WFXML/attribute 

              one or     - - any non-conflicting WFXML/attribute from
              more URI        the listed namespaces
              references
              (space separated)

    ##targetNamespace or ##local may appear in the above list, to
        refer to the targetNamespace of the enclosing
        schema or an absent targetNamespace respectively
-->
<scheme name="namespaceList-content-old"><!--union:--><inherit scheme="_hrc_int_d12e577-content"/>
         <inherit scheme="_hrc_int_d12e581-content"/>
      </scheme>
      <scheme name="namespaceList-content-error">
         <inherit scheme="namespaceList-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="namespaceList-content-cdsect">
         <inherit scheme="namespaceList-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="namespaceList-Attributes"/>
      <scheme name="namespaceList-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="namespaceList-content-error"/>
         </inherit>
      </scheme>
      <scheme name="namespaceList-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="namespaceList-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="namespaceList-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="namespaceList-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e577-content">
         <regexp region="Enumeration" match="/##any/"/>
         <regexp region="Enumeration" match="/##other/"/>
      </scheme>
      <scheme name="_hrc_int_d12e577-content-error">
         <inherit scheme="_hrc_int_d12e577-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e577-Attributes"/>
      <scheme name="_hrc_int_d12e577-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e577-content-error"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e581-content"><!--list:--><inherit scheme="_hrc_int_d12e583-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e581-content-error">
         <inherit scheme="_hrc_int_d12e581-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e581-Attributes"/>
      <scheme name="_hrc_int_d12e581-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e581-content-error"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e583-content"><!--union:--><inherit scheme="anyURI-content"/>
         <inherit scheme="_hrc_int_d12e585-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e583-content-error">
         <inherit scheme="_hrc_int_d12e583-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e583-Attributes"/>
      <scheme name="_hrc_int_d12e583-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e583-content-error"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e585-content">
         <regexp region="Enumeration" match="/##targetNamespace/"/>
         <regexp region="Enumeration" match="/##local/"/>
      </scheme>
      <scheme name="_hrc_int_d12e585-content-error">
         <inherit scheme="_hrc_int_d12e585-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e585-Attributes"/>
      <scheme name="_hrc_int_d12e585-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e585-content-error"/>
         </inherit>
      </scheme>
      <scheme name="attributeGroup-content">
         <inherit scheme="attrDecls-group"/>
         <inherit scheme="annotated-content"/>
      </scheme>
      <scheme name="attributeGroup-content-error">
         <inherit scheme="attributeGroup-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="attributeGroup-content-cdsect">
         <inherit scheme="attributeGroup-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="attributeGroup-Attributes">
         <inherit scheme="defRef-attributeGroup"/>
         <inherit scheme="annotated-Attributes"/>
      </scheme>
      <scheme name="attributeGroup-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="attributeGroup-content"/>
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="attributeGroup-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="attributeGroup-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="namedAttributeGroup-content">
         <inherit scheme="annotation-element"/>
         <inherit scheme="attrDecls-group"/>
      </scheme>
      <scheme name="namedAttributeGroup-content-error">
         <inherit scheme="namedAttributeGroup-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="namedAttributeGroup-content-cdsect">
         <inherit scheme="namedAttributeGroup-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="namedAttributeGroup-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(name)\M([\s\=]|$)/x"
                scheme="NCName-AttributeContent"/>
         <regexp match="/ref/x" region="xml:badChar"/>
         <inherit scheme="attributeGroup-Attributes"/>
      </scheme>
      <scheme name="namedAttributeGroup-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="namedAttributeGroup-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="namedAttributeGroup-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="namedAttributeGroup-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="attributeGroupRef-content">
         <inherit scheme="annotation-element"/>
      </scheme>
      <scheme name="attributeGroupRef-content-error">
         <inherit scheme="attributeGroupRef-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="attributeGroupRef-content-cdsect">
         <inherit scheme="attributeGroupRef-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="attributeGroupRef-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name" start="/(\s?#1|^)(ref)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <regexp match="/name/x" region="xml:badChar"/>
         <inherit scheme="attributeGroup-Attributes"/>
      </scheme>
      <scheme name="attributeGroupRef-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="attributeGroupRef-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="attributeGroupRef-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="attributeGroupRef-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: include
-->
<scheme name="_hrc_int_d12e620-content">
         <inherit scheme="annotated-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e620-content-error">
         <inherit scheme="_hrc_int_d12e620-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e620-content-cdsect">
         <inherit scheme="_hrc_int_d12e620-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e620-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(schemaLocation)\M([\s\=]|$)/x"
                scheme="anyURI-AttributeContent"/>
         <inherit scheme="annotated-Attributes"/>
      </scheme>
      <scheme name="_hrc_int_d12e620-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e620-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="_hrc_int_d12e620-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e620-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: redefine
-->
<scheme name="_hrc_int_d12e627-content">
         <inherit scheme="annotation-element"/>
         <inherit scheme="redefinable-group"/>
         <inherit scheme="openAttrs-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e627-content-error">
         <inherit scheme="_hrc_int_d12e627-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e627-content-cdsect">
         <inherit scheme="_hrc_int_d12e627-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e627-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(schemaLocation)\M([\s\=]|$)/x"
                scheme="anyURI-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name" start="/(\s?#1|^)(id)\M([\s\=]|$)/x"
                scheme="ID-AttributeContent"/>
         <inherit scheme="openAttrs-Attributes"/>
      </scheme>
      <scheme name="_hrc_int_d12e627-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e627-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="_hrc_int_d12e627-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e627-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: import
-->
<scheme name="_hrc_int_d12e639-content">
         <inherit scheme="annotated-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e639-content-error">
         <inherit scheme="_hrc_int_d12e639-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e639-content-cdsect">
         <inherit scheme="_hrc_int_d12e639-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e639-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(namespace)\M([\s\=]|$)/x"
                scheme="anyURI-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(schemaLocation)\M([\s\=]|$)/x"
                scheme="anyURI-AttributeContent"/>
         <inherit scheme="annotated-Attributes"/>
      </scheme>
      <scheme name="_hrc_int_d12e639-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e639-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="_hrc_int_d12e639-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e639-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: selector
-->
<scheme name="_hrc_int_d12e647-content">
         <inherit scheme="annotated-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e647-content-error">
         <inherit scheme="_hrc_int_d12e647-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e647-content-cdsect">
         <inherit scheme="_hrc_int_d12e647-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e647-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(xpath)\M([\s\=]|$)/x"
                scheme="xpath-type-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(xpath)\M([\s\=]|$)/x"
                scheme="_hrc_int_d12e651-AttributeContent"/>
         <inherit scheme="annotated-Attributes"/>
      </scheme>
      <scheme name="_hrc_int_d12e647-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e647-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="_hrc_int_d12e647-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e647-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: xpath
-->
<scheme name="_hrc_int_d12e651-content"><!--
    Warning: RE pattern used. Possible compatibility faults
    Original RE: (\.//)?(((child::)?((\i\c*:)?(\i\c*|\*)))|\.)(/(((child::)?((\i\c*:)?(\i\c*|\*)))|\.))*(\|(\.//)?(((child::)?((\i\c*:)?(\i\c*|\*)))|\.)(/(((child::)?((\i\c*:)?(\i\c*|\*)))|\.))*)*--><regexp region="Enumeration" priority="low"
                 match="/(\.\/\/)?(((child::)?(([%xml:NCNameStartChar;][%xml:NCNameChar;]*:)?([%xml:NCNameStartChar;][%xml:NCNameChar;]*|\*)))|\.)(\/(((child::)?(([%xml:NCNameStartChar;][%xml:NCNameChar;]*:)?([%xml:NCNameStartChar;][%xml:NCNameChar;]*|\*)))|\.))*(\|(\.\/\/)?(((child::)?(([%xml:NCNameStartChar;][%xml:NCNameChar;]*:)?([%xml:NCNameStartChar;][%xml:NCNameChar;]*|\*)))|\.)(\/(((child::)?(([%xml:NCNameStartChar;][%xml:NCNameChar;]*:)?([%xml:NCNameStartChar;][%xml:NCNameChar;]*|\*)))|\.))*)*/"/>
      </scheme>
      <scheme name="_hrc_int_d12e651-content-error">
         <inherit scheme="_hrc_int_d12e651-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e651-Attributes"/>
      <scheme name="_hrc_int_d12e651-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e651-content-error"/>
         </inherit>
      </scheme>
      <!--
        parent: field
-->
<scheme name="_hrc_int_d12e665-content">
         <inherit scheme="annotated-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e665-content-error">
         <inherit scheme="_hrc_int_d12e665-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e665-content-cdsect">
         <inherit scheme="_hrc_int_d12e665-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e665-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(xpath)\M([\s\=]|$)/x"
                scheme="xpath-type-attr-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(xpath)\M([\s\=]|$)/x"
                scheme="_hrc_int_d12e669-AttributeContent"/>
         <inherit scheme="annotated-Attributes"/>
      </scheme>
      <scheme name="_hrc_int_d12e665-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e665-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="_hrc_int_d12e665-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e665-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: xpath
-->
<scheme name="_hrc_int_d12e669-content"><!--
    Warning: RE pattern used. Possible compatibility faults
    Original RE: (\.//)?((((child::)?((\i\c*:)?(\i\c*|\*)))|\.)/)*((((child::)?((\i\c*:)?(\i\c*|\*)))|\.)|((attribute::|@)((\i\c*:)?(\i\c*|\*))))(\|(\.//)?((((child::)?((\i\c*:)?(\i\c*|\*)))|\.)/)*((((child::)?((\i\c*:)?(\i\c*|\*)))|\.)|((attribute::|@)((\i\c*:)?(\i\c*|\*)))))*--><regexp region="Enumeration" priority="low"
                 match="/(\.\/\/)?((((child::)?(([%xml:NCNameStartChar;][%xml:NCNameChar;]*:)?([%xml:NCNameStartChar;][%xml:NCNameChar;]*|\*)))|\.)\/)*((((child::)?(([%xml:NCNameStartChar;][%xml:NCNameChar;]*:)?([%xml:NCNameStartChar;][%xml:NCNameChar;]*|\*)))|\.)|((attribute::|@)(([%xml:NCNameStartChar;][%xml:NCNameChar;]*:)?([%xml:NCNameStartChar;][%xml:NCNameChar;]*|\*))))(\|(\.\/\/)?((((child::)?(([%xml:NCNameStartChar;][%xml:NCNameChar;]*:)?([%xml:NCNameStartChar;][%xml:NCNameChar;]*|\*)))|\.)\/)*((((child::)?(([%xml:NCNameStartChar;][%xml:NCNameChar;]*:)?([%xml:NCNameStartChar;][%xml:NCNameChar;]*|\*)))|\.)|((attribute::|@)(([%xml:NCNameStartChar;][%xml:NCNameChar;]*:)?([%xml:NCNameStartChar;][%xml:NCNameChar;]*|\*)))))*/"/>
      </scheme>
      <scheme name="_hrc_int_d12e669-content-error">
         <inherit scheme="_hrc_int_d12e669-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e669-Attributes"/>
      <scheme name="_hrc_int_d12e669-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e669-content-error"/>
         </inherit>
      </scheme>
      <scheme name="keybase-content">
         <inherit scheme="selector-element"/>
         <inherit scheme="field-element"/>
         <inherit scheme="annotated-content"/>
      </scheme>
      <scheme name="keybase-content-error">
         <inherit scheme="keybase-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="keybase-content-cdsect">
         <inherit scheme="keybase-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="keybase-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(name)\M([\s\=]|$)/x"
                scheme="NCName-AttributeContent"/>
         <inherit scheme="annotated-Attributes"/>
      </scheme>
      <scheme name="keybase-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="keybase-content"/>
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="keybase-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="keybase-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: keyref
-->
<scheme name="_hrc_int_d12e704-content">
         <inherit scheme="keybase-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e704-content-error">
         <inherit scheme="_hrc_int_d12e704-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e704-content-cdsect">
         <inherit scheme="_hrc_int_d12e704-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e704-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(refer)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <inherit scheme="keybase-Attributes"/>
      </scheme>
      <scheme name="_hrc_int_d12e704-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e704-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="_hrc_int_d12e704-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e704-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: notation
-->
<scheme name="_hrc_int_d12e711-content">
         <inherit scheme="annotated-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e711-content-error">
         <inherit scheme="_hrc_int_d12e711-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e711-content-cdsect">
         <inherit scheme="_hrc_int_d12e711-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e711-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(name)\M([\s\=]|$)/x"
                scheme="NCName-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(public)\M([\s\=]|$)/x"
                scheme="public-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(system)\M([\s\=]|$)/x"
                scheme="anyURI-AttributeContent"/>
         <inherit scheme="annotated-Attributes"/>
      </scheme>
      <scheme name="_hrc_int_d12e711-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e711-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="_hrc_int_d12e711-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e711-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="public-content-old">
         <inherit scheme="token-content"/>
      </scheme>
      <scheme name="public-content-error">
         <inherit scheme="public-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="public-content-cdsect">
         <inherit scheme="public-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="public-Attributes"/>
      <scheme name="public-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="public-content-error"/>
         </inherit>
      </scheme>
      <scheme name="public-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="public-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="public-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="public-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: appinfo
-->
<scheme name="_hrc_int_d12e727-content">
         <inherit scheme="xml:element"/>
      </scheme>
      <scheme name="_hrc_int_d12e727-content-error">
         <inherit scheme="_hrc_int_d12e727-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e727-content-cdsect">
         <inherit scheme="_hrc_int_d12e727-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e727-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(source)\M([\s\=]|$)/x"
                scheme="anyURI-AttributeContent"/>
         <inherit scheme="xml:Attribute.any"/>
      </scheme>
      <scheme name="_hrc_int_d12e727-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e727-content"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e727-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: documentation
-->
<scheme name="_hrc_int_d12e736-content">
         <inherit scheme="xml:element"/>
      </scheme>
      <scheme name="_hrc_int_d12e736-content-error">
         <inherit scheme="_hrc_int_d12e736-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e736-content-cdsect">
         <inherit scheme="_hrc_int_d12e736-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e736-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(source)\M([\s\=]|$)/x"
                scheme="anyURI-AttributeContent"/>
         <inherit scheme="xmlns:lang-attribute"/>
         <inherit scheme="xml:Attribute.any"/>
      </scheme>
      <scheme name="_hrc_int_d12e736-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e736-content"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e736-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: annotation
-->
<scheme name="_hrc_int_d12e745-content">
         <inherit scheme="appinfo-element"/>
         <inherit scheme="documentation-element"/>
         <inherit scheme="openAttrs-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e745-content-error">
         <inherit scheme="_hrc_int_d12e745-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e745-content-cdsect">
         <inherit scheme="_hrc_int_d12e745-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e745-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name" start="/(\s?#1|^)(id)\M([\s\=]|$)/x"
                scheme="ID-AttributeContent"/>
         <inherit scheme="openAttrs-Attributes"/>
      </scheme>
      <scheme name="_hrc_int_d12e745-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e745-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="_hrc_int_d12e745-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e745-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="anyType-content-old">
         <inherit scheme="xml:element"/>
      </scheme>
      <scheme name="anyType-content-error">
         <inherit scheme="anyType-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="anyType-content-cdsect">
         <inherit scheme="anyType-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="anyType-Attributes">
         <inherit scheme="xml:Attribute.any"/>
      </scheme>
      <scheme name="anyType-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="anyType-content"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="anyType-Attributes"/>
         </inherit>
      </scheme>
      <!--
      First the built-in primitive datatypes.  These definitions are for
      information only, the real built-in definitions are magic.
    
      For each built-in datatype in this schema (both primitive and
      derived) can be uniquely addressed via a URI constructed
      as follows:
        1) the base URI is the URI of the XML Schema namespace
        2) the fragment identifier is the name of the datatype

      For example, to address the int datatype, the URI is:

        http://www.w3.org/2001/XMLSchema#int

      Additionally, each facet definition element can be uniquely
      addressed via a URI constructed as follows:
        1) the base URI is the URI of the XML Schema namespace
        2) the fragment identifier is the name of the facet

      For example, to address the maxInclusive facet, the URI is:

        http://www.w3.org/2001/XMLSchema#maxInclusive

      Additionally, each facet usage in a built-in datatype definition
      can be uniquely addressed via a URI constructed as follows:
        1) the base URI is the URI of the XML Schema namespace
        2) the fragment identifier is the name of the datatype, followed
           by a period (".") followed by the name of the facet

      For example, to address the usage of the maxInclusive facet in
      the definition of int, the URI is:

        http://www.w3.org/2001/XMLSchema#int.maxInclusive

    
-->
<scheme name="string-content-old">
         <inherit scheme="anySimpleType-content"/>
      </scheme>
      <scheme name="string-content-error">
         <inherit scheme="string-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="string-content-cdsect">
         <inherit scheme="string-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="string-Attributes"/>
      <scheme name="string-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="string-content-error"/>
         </inherit>
      </scheme>
      <scheme name="string-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="string-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="string-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="string-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="boolean-content-old">
         <inherit scheme="anySimpleType-content"/>
      </scheme>
      <scheme name="boolean-content-error">
         <inherit scheme="boolean-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="boolean-content-cdsect">
         <inherit scheme="boolean-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="boolean-Attributes"/>
      <scheme name="boolean-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="boolean-content-error"/>
         </inherit>
      </scheme>
      <scheme name="boolean-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="boolean-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="boolean-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="boolean-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="float-content-old">
         <inherit scheme="anySimpleType-content"/>
      </scheme>
      <scheme name="float-content-error">
         <inherit scheme="float-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="float-content-cdsect">
         <inherit scheme="float-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="float-Attributes"/>
      <scheme name="float-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="float-content-error"/>
         </inherit>
      </scheme>
      <scheme name="float-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="float-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="float-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="float-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="double-content-old">
         <inherit scheme="anySimpleType-content"/>
      </scheme>
      <scheme name="double-content-error">
         <inherit scheme="double-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="double-content-cdsect">
         <inherit scheme="double-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="double-Attributes"/>
      <scheme name="double-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="double-content-error"/>
         </inherit>
      </scheme>
      <scheme name="double-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="double-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="double-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="double-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="decimal-content-old">
         <inherit scheme="anySimpleType-content"/>
      </scheme>
      <scheme name="decimal-content-error">
         <inherit scheme="decimal-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="decimal-content-cdsect">
         <inherit scheme="decimal-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="decimal-Attributes"/>
      <scheme name="decimal-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="decimal-content-error"/>
         </inherit>
      </scheme>
      <scheme name="decimal-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="decimal-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="decimal-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="decimal-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="duration-content-old">
         <inherit scheme="anySimpleType-content"/>
      </scheme>
      <scheme name="duration-content-error">
         <inherit scheme="duration-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="duration-content-cdsect">
         <inherit scheme="duration-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="duration-Attributes"/>
      <scheme name="duration-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="duration-content-error"/>
         </inherit>
      </scheme>
      <scheme name="duration-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="duration-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="duration-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="duration-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="dateTime-content-old">
         <inherit scheme="anySimpleType-content"/>
      </scheme>
      <scheme name="dateTime-content-error">
         <inherit scheme="dateTime-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="dateTime-content-cdsect">
         <inherit scheme="dateTime-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="dateTime-Attributes"/>
      <scheme name="dateTime-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="dateTime-content-error"/>
         </inherit>
      </scheme>
      <scheme name="dateTime-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="dateTime-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="dateTime-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="dateTime-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="time-content-old">
         <inherit scheme="anySimpleType-content"/>
      </scheme>
      <scheme name="time-content-error">
         <inherit scheme="time-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="time-content-cdsect">
         <inherit scheme="time-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="time-Attributes"/>
      <scheme name="time-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="time-content-error"/>
         </inherit>
      </scheme>
      <scheme name="time-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="time-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="time-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="time-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="date-content-old">
         <inherit scheme="anySimpleType-content"/>
      </scheme>
      <scheme name="date-content-error">
         <inherit scheme="date-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="date-content-cdsect">
         <inherit scheme="date-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="date-Attributes"/>
      <scheme name="date-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="date-content-error"/>
         </inherit>
      </scheme>
      <scheme name="date-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="date-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="date-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="date-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="gYearMonth-content-old">
         <inherit scheme="anySimpleType-content"/>
      </scheme>
      <scheme name="gYearMonth-content-error">
         <inherit scheme="gYearMonth-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="gYearMonth-content-cdsect">
         <inherit scheme="gYearMonth-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="gYearMonth-Attributes"/>
      <scheme name="gYearMonth-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="gYearMonth-content-error"/>
         </inherit>
      </scheme>
      <scheme name="gYearMonth-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="gYearMonth-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="gYearMonth-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="gYearMonth-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="gYear-content-old">
         <inherit scheme="anySimpleType-content"/>
      </scheme>
      <scheme name="gYear-content-error">
         <inherit scheme="gYear-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="gYear-content-cdsect">
         <inherit scheme="gYear-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="gYear-Attributes"/>
      <scheme name="gYear-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="gYear-content-error"/>
         </inherit>
      </scheme>
      <scheme name="gYear-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="gYear-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="gYear-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="gYear-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="gMonthDay-content-old">
         <inherit scheme="anySimpleType-content"/>
      </scheme>
      <scheme name="gMonthDay-content-error">
         <inherit scheme="gMonthDay-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="gMonthDay-content-cdsect">
         <inherit scheme="gMonthDay-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="gMonthDay-Attributes"/>
      <scheme name="gMonthDay-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="gMonthDay-content-error"/>
         </inherit>
      </scheme>
      <scheme name="gMonthDay-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="gMonthDay-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="gMonthDay-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="gMonthDay-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="gDay-content-old">
         <inherit scheme="anySimpleType-content"/>
      </scheme>
      <scheme name="gDay-content-error">
         <inherit scheme="gDay-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="gDay-content-cdsect">
         <inherit scheme="gDay-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="gDay-Attributes"/>
      <scheme name="gDay-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="gDay-content-error"/>
         </inherit>
      </scheme>
      <scheme name="gDay-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="gDay-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="gDay-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="gDay-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="gMonth-content-old">
         <inherit scheme="anySimpleType-content"/>
      </scheme>
      <scheme name="gMonth-content-error">
         <inherit scheme="gMonth-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="gMonth-content-cdsect">
         <inherit scheme="gMonth-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="gMonth-Attributes"/>
      <scheme name="gMonth-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="gMonth-content-error"/>
         </inherit>
      </scheme>
      <scheme name="gMonth-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="gMonth-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="gMonth-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="gMonth-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="hexBinary-content-old">
         <inherit scheme="anySimpleType-content"/>
      </scheme>
      <scheme name="hexBinary-content-error">
         <inherit scheme="hexBinary-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="hexBinary-content-cdsect">
         <inherit scheme="hexBinary-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="hexBinary-Attributes"/>
      <scheme name="hexBinary-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="hexBinary-content-error"/>
         </inherit>
      </scheme>
      <scheme name="hexBinary-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="hexBinary-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="hexBinary-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="hexBinary-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="base64Binary-content-old">
         <inherit scheme="anySimpleType-content"/>
      </scheme>
      <scheme name="base64Binary-content-error">
         <inherit scheme="base64Binary-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="base64Binary-content-cdsect">
         <inherit scheme="base64Binary-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="base64Binary-Attributes"/>
      <scheme name="base64Binary-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="base64Binary-content-error"/>
         </inherit>
      </scheme>
      <scheme name="base64Binary-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="base64Binary-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="base64Binary-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="base64Binary-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="anyURI-content-old">
         <inherit scheme="anySimpleType-content"/>
      </scheme>
      <scheme name="anyURI-content-error">
         <inherit scheme="anyURI-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="anyURI-content-cdsect">
         <inherit scheme="anyURI-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="anyURI-Attributes"/>
      <scheme name="anyURI-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="anyURI-content-error"/>
         </inherit>
      </scheme>
      <scheme name="anyURI-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="anyURI-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="anyURI-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="anyURI-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="QName-content-old">
         <inherit scheme="anySimpleType-content"/>
      </scheme>
      <scheme name="QName-content-error">
         <inherit scheme="QName-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="QName-content-cdsect">
         <inherit scheme="QName-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="QName-Attributes"/>
      <scheme name="QName-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="QName-content-error"/>
         </inherit>
      </scheme>
      <scheme name="QName-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="QName-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="QName-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="QName-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="NOTATION-content-old">
         <inherit scheme="anySimpleType-content"/>
      </scheme>
      <scheme name="NOTATION-content-error">
         <inherit scheme="NOTATION-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="NOTATION-content-cdsect">
         <inherit scheme="NOTATION-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="NOTATION-Attributes"/>
      <scheme name="NOTATION-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="NOTATION-content-error"/>
         </inherit>
      </scheme>
      <scheme name="NOTATION-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="NOTATION-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="NOTATION-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="NOTATION-Attributes"/>
         </inherit>
      </scheme>
      <!--
      Now the derived primitive types
    
-->
<scheme name="normalizedString-content-old">
         <inherit scheme="string-content"/>
      </scheme>
      <scheme name="normalizedString-content-error">
         <inherit scheme="normalizedString-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="normalizedString-content-cdsect">
         <inherit scheme="normalizedString-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="normalizedString-Attributes"/>
      <scheme name="normalizedString-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="normalizedString-content-error"/>
         </inherit>
      </scheme>
      <scheme name="normalizedString-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="normalizedString-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="normalizedString-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="normalizedString-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="token-content-old">
         <inherit scheme="normalizedString-content"/>
      </scheme>
      <scheme name="token-content-error">
         <inherit scheme="token-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="token-content-cdsect">
         <inherit scheme="token-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="token-Attributes"/>
      <scheme name="token-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="token-content-error"/>
         </inherit>
      </scheme>
      <scheme name="token-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="token-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="token-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="token-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="language-content-old"><!--
    Warning: RE pattern used. Possible compatibility faults
    Original RE: [a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*--><regexp region="Enumeration" priority="low" match="/[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*/"/>
      </scheme>
      <scheme name="language-content-error">
         <inherit scheme="language-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="language-content-cdsect">
         <inherit scheme="language-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="language-Attributes"/>
      <scheme name="language-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="language-content-error"/>
         </inherit>
      </scheme>
      <scheme name="language-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="language-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="language-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="language-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="IDREFS-content-old"><!--list:--><inherit scheme="IDREF-content"/>
         <inherit scheme="_hrc_int_d12e1124-content"/>
      </scheme>
      <scheme name="IDREFS-content-error">
         <inherit scheme="IDREFS-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="IDREFS-content-cdsect">
         <inherit scheme="IDREFS-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="IDREFS-Attributes"/>
      <scheme name="IDREFS-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="IDREFS-content-error"/>
         </inherit>
      </scheme>
      <scheme name="IDREFS-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="IDREFS-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="IDREFS-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="IDREFS-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e1124-content"><!--list:--><inherit scheme="IDREF-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e1124-content-error">
         <inherit scheme="_hrc_int_d12e1124-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e1124-Attributes"/>
      <scheme name="_hrc_int_d12e1124-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e1124-content-error"/>
         </inherit>
      </scheme>
      <scheme name="ENTITIES-content-old"><!--list:--><inherit scheme="ENTITY-content"/>
         <inherit scheme="_hrc_int_d12e1142-content"/>
      </scheme>
      <scheme name="ENTITIES-content-error">
         <inherit scheme="ENTITIES-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="ENTITIES-content-cdsect">
         <inherit scheme="ENTITIES-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="ENTITIES-Attributes"/>
      <scheme name="ENTITIES-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="ENTITIES-content-error"/>
         </inherit>
      </scheme>
      <scheme name="ENTITIES-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="ENTITIES-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="ENTITIES-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="ENTITIES-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e1142-content"><!--list:--><inherit scheme="ENTITY-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e1142-content-error">
         <inherit scheme="_hrc_int_d12e1142-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e1142-Attributes"/>
      <scheme name="_hrc_int_d12e1142-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e1142-content-error"/>
         </inherit>
      </scheme>
      <scheme name="NMTOKEN-content-old"><!--
    Warning: RE pattern used. Possible compatibility faults
    Original RE: \c+--><regexp region="Enumeration" priority="low" match="/[%xml:NCNameChar;]+/"/>
      </scheme>
      <scheme name="NMTOKEN-content-error">
         <inherit scheme="NMTOKEN-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="NMTOKEN-content-cdsect">
         <inherit scheme="NMTOKEN-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="NMTOKEN-Attributes"/>
      <scheme name="NMTOKEN-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="NMTOKEN-content-error"/>
         </inherit>
      </scheme>
      <scheme name="NMTOKEN-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="NMTOKEN-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="NMTOKEN-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="NMTOKEN-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="NMTOKENS-content-old"><!--list:--><inherit scheme="NMTOKEN-content"/>
         <inherit scheme="_hrc_int_d12e1169-content"/>
      </scheme>
      <scheme name="NMTOKENS-content-error">
         <inherit scheme="NMTOKENS-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="NMTOKENS-content-cdsect">
         <inherit scheme="NMTOKENS-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="NMTOKENS-Attributes"/>
      <scheme name="NMTOKENS-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="NMTOKENS-content-error"/>
         </inherit>
      </scheme>
      <scheme name="NMTOKENS-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="NMTOKENS-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="NMTOKENS-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="NMTOKENS-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e1169-content"><!--list:--><inherit scheme="NMTOKEN-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e1169-content-error">
         <inherit scheme="_hrc_int_d12e1169-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e1169-Attributes"/>
      <scheme name="_hrc_int_d12e1169-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e1169-content-error"/>
         </inherit>
      </scheme>
      <scheme name="Name-content-old"><!--
    Warning: RE pattern used. Possible compatibility faults
    Original RE: \i\c*--><regexp region="Enumeration" priority="low"
                 match="/[%xml:NCNameStartChar;][%xml:NCNameChar;]*/"/>
      </scheme>
      <scheme name="Name-content-error">
         <inherit scheme="Name-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="Name-content-cdsect">
         <inherit scheme="Name-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="Name-Attributes"/>
      <scheme name="Name-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="Name-content-error"/>
         </inherit>
      </scheme>
      <scheme name="Name-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="Name-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="Name-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="Name-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="NCName-content-old"><!--
    Warning: RE pattern used. Possible compatibility faults
    Original RE: [\i-[:]][\c-[:]]*--><regexp region="Enumeration" priority="low"
                 match="/[[%xml:NCNameStartChar;]-[:]][[%xml:NCNameChar;]-[:]]*/"/>
      </scheme>
      <scheme name="NCName-content-error">
         <inherit scheme="NCName-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="NCName-content-cdsect">
         <inherit scheme="NCName-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="NCName-Attributes"/>
      <scheme name="NCName-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="NCName-content-error"/>
         </inherit>
      </scheme>
      <scheme name="NCName-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="NCName-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="NCName-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="NCName-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="ID-content-old">
         <inherit scheme="NCName-content"/>
      </scheme>
      <scheme name="ID-content-error">
         <inherit scheme="ID-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="ID-content-cdsect">
         <inherit scheme="ID-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="ID-Attributes"/>
      <scheme name="ID-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="ID-content-error"/>
         </inherit>
      </scheme>
      <scheme name="ID-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="ID-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="ID-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="ID-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="IDREF-content-old">
         <inherit scheme="NCName-content"/>
      </scheme>
      <scheme name="IDREF-content-error">
         <inherit scheme="IDREF-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="IDREF-content-cdsect">
         <inherit scheme="IDREF-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="IDREF-Attributes"/>
      <scheme name="IDREF-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="IDREF-content-error"/>
         </inherit>
      </scheme>
      <scheme name="IDREF-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="IDREF-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="IDREF-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="IDREF-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="ENTITY-content-old">
         <inherit scheme="NCName-content"/>
      </scheme>
      <scheme name="ENTITY-content-error">
         <inherit scheme="ENTITY-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="ENTITY-content-cdsect">
         <inherit scheme="ENTITY-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="ENTITY-Attributes"/>
      <scheme name="ENTITY-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="ENTITY-content-error"/>
         </inherit>
      </scheme>
      <scheme name="ENTITY-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="ENTITY-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="ENTITY-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="ENTITY-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="integer-content-old"><!--
    Warning: RE pattern used. Possible compatibility faults
    Original RE: [\-+]?[0-9]+--><regexp region="Enumeration" priority="low" match="/[\-+]?[0-9]+/"/>
      </scheme>
      <scheme name="integer-content-error">
         <inherit scheme="integer-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="integer-content-cdsect">
         <inherit scheme="integer-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="integer-Attributes"/>
      <scheme name="integer-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="integer-content-error"/>
         </inherit>
      </scheme>
      <scheme name="integer-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="integer-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="integer-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="integer-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="nonPositiveInteger-content-old">
         <inherit scheme="integer-content"/>
      </scheme>
      <scheme name="nonPositiveInteger-content-error">
         <inherit scheme="nonPositiveInteger-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="nonPositiveInteger-content-cdsect">
         <inherit scheme="nonPositiveInteger-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="nonPositiveInteger-Attributes"/>
      <scheme name="nonPositiveInteger-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="nonPositiveInteger-content-error"/>
         </inherit>
      </scheme>
      <scheme name="nonPositiveInteger-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="nonPositiveInteger-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream"
                     subst-scheme="nonPositiveInteger-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="nonPositiveInteger-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="negativeInteger-content-old">
         <inherit scheme="nonPositiveInteger-content"/>
      </scheme>
      <scheme name="negativeInteger-content-error">
         <inherit scheme="negativeInteger-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="negativeInteger-content-cdsect">
         <inherit scheme="negativeInteger-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="negativeInteger-Attributes"/>
      <scheme name="negativeInteger-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="negativeInteger-content-error"/>
         </inherit>
      </scheme>
      <scheme name="negativeInteger-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="negativeInteger-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="negativeInteger-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="negativeInteger-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="long-content-old">
         <inherit scheme="integer-content"/>
      </scheme>
      <scheme name="long-content-error">
         <inherit scheme="long-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="long-content-cdsect">
         <inherit scheme="long-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="long-Attributes"/>
      <scheme name="long-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="long-content-error"/>
         </inherit>
      </scheme>
      <scheme name="long-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="long-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="long-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="long-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="int-content-old">
         <inherit scheme="long-content"/>
      </scheme>
      <scheme name="int-content-error">
         <inherit scheme="int-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="int-content-cdsect">
         <inherit scheme="int-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="int-Attributes"/>
      <scheme name="int-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="int-content-error"/>
         </inherit>
      </scheme>
      <scheme name="int-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="int-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="int-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="int-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="short-content-old">
         <inherit scheme="int-content"/>
      </scheme>
      <scheme name="short-content-error">
         <inherit scheme="short-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="short-content-cdsect">
         <inherit scheme="short-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="short-Attributes"/>
      <scheme name="short-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="short-content-error"/>
         </inherit>
      </scheme>
      <scheme name="short-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="short-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="short-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="short-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="byte-content-old">
         <inherit scheme="short-content"/>
      </scheme>
      <scheme name="byte-content-error">
         <inherit scheme="byte-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="byte-content-cdsect">
         <inherit scheme="byte-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="byte-Attributes"/>
      <scheme name="byte-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="byte-content-error"/>
         </inherit>
      </scheme>
      <scheme name="byte-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="byte-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="byte-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="byte-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="nonNegativeInteger-content-old">
         <inherit scheme="integer-content"/>
      </scheme>
      <scheme name="nonNegativeInteger-content-error">
         <inherit scheme="nonNegativeInteger-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="nonNegativeInteger-content-cdsect">
         <inherit scheme="nonNegativeInteger-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="nonNegativeInteger-Attributes"/>
      <scheme name="nonNegativeInteger-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="nonNegativeInteger-content-error"/>
         </inherit>
      </scheme>
      <scheme name="nonNegativeInteger-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="nonNegativeInteger-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream"
                     subst-scheme="nonNegativeInteger-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="nonNegativeInteger-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="unsignedLong-content-old">
         <inherit scheme="nonNegativeInteger-content"/>
      </scheme>
      <scheme name="unsignedLong-content-error">
         <inherit scheme="unsignedLong-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="unsignedLong-content-cdsect">
         <inherit scheme="unsignedLong-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="unsignedLong-Attributes"/>
      <scheme name="unsignedLong-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="unsignedLong-content-error"/>
         </inherit>
      </scheme>
      <scheme name="unsignedLong-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="unsignedLong-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="unsignedLong-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="unsignedLong-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="unsignedInt-content-old">
         <inherit scheme="unsignedLong-content"/>
      </scheme>
      <scheme name="unsignedInt-content-error">
         <inherit scheme="unsignedInt-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="unsignedInt-content-cdsect">
         <inherit scheme="unsignedInt-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="unsignedInt-Attributes"/>
      <scheme name="unsignedInt-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="unsignedInt-content-error"/>
         </inherit>
      </scheme>
      <scheme name="unsignedInt-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="unsignedInt-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="unsignedInt-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="unsignedInt-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="unsignedShort-content-old">
         <inherit scheme="unsignedInt-content"/>
      </scheme>
      <scheme name="unsignedShort-content-error">
         <inherit scheme="unsignedShort-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="unsignedShort-content-cdsect">
         <inherit scheme="unsignedShort-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="unsignedShort-Attributes"/>
      <scheme name="unsignedShort-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="unsignedShort-content-error"/>
         </inherit>
      </scheme>
      <scheme name="unsignedShort-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="unsignedShort-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="unsignedShort-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="unsignedShort-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="unsignedByte-content-old">
         <inherit scheme="unsignedShort-content"/>
      </scheme>
      <scheme name="unsignedByte-content-error">
         <inherit scheme="unsignedByte-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="unsignedByte-content-cdsect">
         <inherit scheme="unsignedByte-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="unsignedByte-Attributes"/>
      <scheme name="unsignedByte-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream" subst-scheme="unsignedByte-content-error"/>
         </inherit>
      </scheme>
      <scheme name="unsignedByte-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="unsignedByte-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="unsignedByte-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="unsignedByte-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="positiveInteger-content-old">
         <inherit scheme="nonNegativeInteger-content"/>
      </scheme>
      <scheme name="positiveInteger-content-error">
         <inherit scheme="positiveInteger-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="positiveInteger-content-cdsect">
         <inherit scheme="positiveInteger-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="positiveInteger-Attributes"/>
      <scheme name="positiveInteger-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="positiveInteger-content-error"/>
         </inherit>
      </scheme>
      <scheme name="positiveInteger-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="positiveInteger-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream" subst-scheme="positiveInteger-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="positiveInteger-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="derivationControl-content">
         <regexp region="Enumeration" match="/substitution/"/>
         <regexp region="Enumeration" match="/extension/"/>
         <regexp region="Enumeration" match="/restriction/"/>
         <regexp region="Enumeration" match="/list/"/>
         <regexp region="Enumeration" match="/union/"/>
      </scheme>
      <scheme name="derivationControl-content-error">
         <inherit scheme="derivationControl-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="derivationControl-content-cdsect">
         <inherit scheme="derivationControl-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="derivationControl-Attributes"/>
      <scheme name="derivationControl-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="derivationControl-content-error"/>
         </inherit>
      </scheme>
      <scheme name="derivationControl-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="derivationControl-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream"
                     subst-scheme="derivationControl-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="derivationControl-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="simpleDerivationSet-content"><!--union:--><inherit scheme="_hrc_int_d12e1299-content"/>
         <inherit scheme="_hrc_int_d12e1302-content"/>
      </scheme>
      <scheme name="simpleDerivationSet-content-error">
         <inherit scheme="simpleDerivationSet-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="simpleDerivationSet-content-cdsect">
         <inherit scheme="simpleDerivationSet-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="simpleDerivationSet-Attributes"/>
      <scheme name="simpleDerivationSet-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="simpleDerivationSet-content-error"/>
         </inherit>
      </scheme>
      <scheme name="simpleDerivationSet-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="simpleDerivationSet-content-cdsect"/>
            <virtual scheme="xml:content.cdata.stream"
                     subst-scheme="simpleDerivationSet-content-error"/>
            <virtual scheme="xml:element" subst-scheme="def:empty"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="simpleDerivationSet-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e1299-content">
         <regexp region="Enumeration" match="/#all/"/>
      </scheme>
      <scheme name="_hrc_int_d12e1299-content-error">
         <inherit scheme="_hrc_int_d12e1299-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e1299-Attributes"/>
      <scheme name="_hrc_int_d12e1299-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e1299-content-error"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e1302-content"><!--list:--><inherit scheme="_hrc_int_d12e1304-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e1302-content-error">
         <inherit scheme="_hrc_int_d12e1302-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e1302-Attributes"/>
      <scheme name="_hrc_int_d12e1302-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e1302-content-error"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e1304-content">
         <regexp region="Enumeration" match="/list/"/>
         <regexp region="Enumeration" match="/union/"/>
         <regexp region="Enumeration" match="/restriction/"/>
      </scheme>
      <scheme name="_hrc_int_d12e1304-content-error">
         <inherit scheme="_hrc_int_d12e1304-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e1304-Attributes"/>
      <scheme name="_hrc_int_d12e1304-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e1304-content-error"/>
         </inherit>
      </scheme>
      <scheme name="simpleType-content">
         <inherit scheme="simpleDerivation-group"/>
         <inherit scheme="annotated-content"/>
      </scheme>
      <scheme name="simpleType-content-error">
         <inherit scheme="simpleType-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="simpleType-content-cdsect">
         <inherit scheme="simpleType-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="simpleType-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(final)\M([\s\=]|$)/x"
                scheme="simpleDerivationSet-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(name)\M([\s\=]|$)/x"
                scheme="NCName-AttributeContent"/>
         <inherit scheme="annotated-Attributes"/>
      </scheme>
      <scheme name="simpleType-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="simpleType-content"/>
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="simpleType-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="simpleType-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="topLevelSimpleType-content">
         <inherit scheme="annotation-element"/>
         <inherit scheme="simpleDerivation-group"/>
      </scheme>
      <scheme name="topLevelSimpleType-content-error">
         <inherit scheme="topLevelSimpleType-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="topLevelSimpleType-content-cdsect">
         <inherit scheme="topLevelSimpleType-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="topLevelSimpleType-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(name)\M([\s\=]|$)/x"
                scheme="NCName-AttributeContent"/>
         <inherit scheme="simpleType-Attributes"/>
      </scheme>
      <scheme name="topLevelSimpleType-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="topLevelSimpleType-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="topLevelSimpleType-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="topLevelSimpleType-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="localSimpleType-content">
         <inherit scheme="annotation-element"/>
         <inherit scheme="simpleDerivation-group"/>
      </scheme>
      <scheme name="localSimpleType-content-error">
         <inherit scheme="localSimpleType-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="localSimpleType-content-cdsect">
         <inherit scheme="localSimpleType-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="localSimpleType-Attributes">
         <regexp match="/name/x" region="xml:badChar"/>
         <regexp match="/final/x" region="xml:badChar"/>
         <inherit scheme="simpleType-Attributes"/>
      </scheme>
      <scheme name="localSimpleType-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="localSimpleType-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="localSimpleType-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="localSimpleType-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: restriction
-->
<scheme name="_hrc_int_d12e1368-content">
         <inherit scheme="simpleRestrictionModel-group"/>
         <inherit scheme="annotated-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e1368-content-error">
         <inherit scheme="_hrc_int_d12e1368-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e1368-content-cdsect">
         <inherit scheme="_hrc_int_d12e1368-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e1368-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(base)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <inherit scheme="annotated-Attributes"/>
      </scheme>
      <scheme name="_hrc_int_d12e1368-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e1368-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="_hrc_int_d12e1368-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e1368-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: list
-->
<scheme name="_hrc_int_d12e1377-content">
         <regexp match="/\M (&lt; %nsprefix;simpleType \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="simpleTypeOutlined"/>
         <block start="/\M &lt; (%nsprefix;simpleType ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="localSimpleType-elementContent"/>
         <inherit scheme="annotated-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e1377-content-error">
         <inherit scheme="_hrc_int_d12e1377-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e1377-content-cdsect">
         <inherit scheme="_hrc_int_d12e1377-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e1377-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(itemType)\M([\s\=]|$)/x"
                scheme="QName-AttributeContent"/>
         <inherit scheme="annotated-Attributes"/>
      </scheme>
      <scheme name="_hrc_int_d12e1377-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e1377-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="_hrc_int_d12e1377-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e1377-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: union
-->
<scheme name="_hrc_int_d12e1387-content">
         <regexp match="/\M (&lt; %nsprefix;simpleType \b\s*.*? (([\x22\x27])(.*?)(\3))? )([\/&gt;\s]|$)/x"
                 region1="simpleTypeOutlined"/>
         <block start="/\M &lt; (%nsprefix;simpleType ([\s\/&gt;]|$) )/x" end="/ &gt; /x"
                scheme="localSimpleType-elementContent"/>
         <inherit scheme="annotated-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e1387-content-error">
         <inherit scheme="_hrc_int_d12e1387-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e1387-content-cdsect">
         <inherit scheme="_hrc_int_d12e1387-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e1387-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(memberTypes)\M([\s\=]|$)/x"
                scheme="_hrc_int_d12e1396-AttributeContent"/>
         <inherit scheme="annotated-Attributes"/>
      </scheme>
      <scheme name="_hrc_int_d12e1387-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e1387-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="_hrc_int_d12e1387-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e1387-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: memberTypes
-->
<scheme name="_hrc_int_d12e1396-content"><!--list:--><inherit scheme="QName-content"/>
      </scheme>
      <scheme name="_hrc_int_d12e1396-content-error">
         <inherit scheme="_hrc_int_d12e1396-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e1396-Attributes"/>
      <scheme name="_hrc_int_d12e1396-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e1396-content-error"/>
         </inherit>
      </scheme>
      <scheme name="facet-content">
         <inherit scheme="annotated-content"/>
      </scheme>
      <scheme name="facet-content-error">
         <inherit scheme="facet-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="facet-content-cdsect">
         <inherit scheme="facet-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="facet-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(value)\M([\s\=]|$)/x"
                scheme="anySimpleType-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(fixed)\M([\s\=]|$)/x"
                scheme="boolean-AttributeContent"/>
         <inherit scheme="annotated-Attributes"/>
      </scheme>
      <scheme name="facet-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="facet-content"/>
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="facet-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="facet-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="noFixedFacet-content">
         <inherit scheme="annotation-element"/>
      </scheme>
      <scheme name="noFixedFacet-content-error">
         <inherit scheme="noFixedFacet-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="noFixedFacet-content-cdsect">
         <inherit scheme="noFixedFacet-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="noFixedFacet-Attributes">
         <regexp match="/fixed/x" region="xml:badChar"/>
         <inherit scheme="facet-Attributes"/>
      </scheme>
      <scheme name="noFixedFacet-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="noFixedFacet-content"/>
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="noFixedFacet-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="noFixedFacet-Attributes"/>
         </inherit>
      </scheme>
      <scheme name="numFacet-content">
         <inherit scheme="annotation-element"/>
      </scheme>
      <scheme name="numFacet-content-error">
         <inherit scheme="numFacet-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="numFacet-content-cdsect">
         <inherit scheme="numFacet-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="numFacet-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(value)\M([\s\=]|$)/x"
                scheme="nonNegativeInteger-AttributeContent"/>
         <inherit scheme="facet-Attributes"/>
      </scheme>
      <scheme name="numFacet-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="numFacet-content"/>
            <virtual scheme="xml:CDSect.content.stream" subst-scheme="numFacet-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="numFacet-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: totalDigits
-->
<scheme name="_hrc_int_d12e1433-content">
         <inherit scheme="annotation-element"/>
      </scheme>
      <scheme name="_hrc_int_d12e1433-content-error">
         <inherit scheme="_hrc_int_d12e1433-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e1433-content-cdsect">
         <inherit scheme="_hrc_int_d12e1433-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e1433-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(value)\M([\s\=]|$)/x"
                scheme="positiveInteger-AttributeContent"/>
         <inherit scheme="numFacet-Attributes"/>
      </scheme>
      <scheme name="_hrc_int_d12e1433-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e1433-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="_hrc_int_d12e1433-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e1433-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: whiteSpace
-->
<scheme name="_hrc_int_d12e1459-content">
         <inherit scheme="annotation-element"/>
      </scheme>
      <scheme name="_hrc_int_d12e1459-content-error">
         <inherit scheme="_hrc_int_d12e1459-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e1459-content-cdsect">
         <inherit scheme="_hrc_int_d12e1459-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e1459-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(value)\M([\s\=]|$)/x"
                scheme="_hrc_int_d12e1465-AttributeContent"/>
         <inherit scheme="facet-Attributes"/>
      </scheme>
      <scheme name="_hrc_int_d12e1459-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e1459-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="_hrc_int_d12e1459-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e1459-Attributes"/>
         </inherit>
      </scheme>
      <!--
        parent: value
-->
<scheme name="_hrc_int_d12e1465-content">
         <regexp region="Enumeration" match="/preserve/"/>
         <regexp region="Enumeration" match="/replace/"/>
         <regexp region="Enumeration" match="/collapse/"/>
      </scheme>
      <scheme name="_hrc_int_d12e1465-content-error">
         <inherit scheme="_hrc_int_d12e1465-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e1465-Attributes"/>
      <scheme name="_hrc_int_d12e1465-AttributeContent">
         <inherit scheme="AttributeContent">
            <virtual scheme="xml:AttValue.content.stream"
                     subst-scheme="_hrc_int_d12e1465-content-error"/>
         </inherit>
      </scheme>
      <!--
        parent: pattern
-->
<scheme name="_hrc_int_d12e1474-content">
         <inherit scheme="annotation-element"/>
      </scheme>
      <scheme name="_hrc_int_d12e1474-content-error">
         <inherit scheme="_hrc_int_d12e1474-content"/>
         <inherit scheme="xml:badChar"/>
      </scheme>
      <scheme name="_hrc_int_d12e1474-content-cdsect">
         <inherit scheme="_hrc_int_d12e1474-content-error">
            <virtual scheme="xml:badLiter" subst-scheme="xml:badCDLiter"/>
            <virtual scheme="xml:Reference" subst-scheme="def:empty"/>
         </inherit>
      </scheme>
      <scheme name="_hrc_int_d12e1474-Attributes">
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(value)\M([\s\=]|$)/x"
                scheme="REstring-AttributeContent"/>
         <block end="/[&#34;']?#1/" region02="Attribute.name"
                start="/(\s?#1|^)(value)\M([\s\=]|$)/x"
                scheme="string-AttributeContent"/>
         <inherit scheme="noFixedFacet-Attributes"/>
      </scheme>
      <scheme name="_hrc_int_d12e1474-elementContent">
         <inherit scheme="_hrc_int_elementContent">
            <virtual scheme="xml:element" subst-scheme="_hrc_int_d12e1474-content"/>
            <virtual scheme="xml:CDSect.content.stream"
                     subst-scheme="_hrc_int_d12e1474-content-cdsect"/>
            <virtual scheme="xml:Attribute.any" subst-scheme="_hrc_int_d12e1474-Attributes"/>
         </inherit>
      </scheme>

      <scheme name="xmlschema-root">
         <inherit scheme="schema-element"/>
      </scheme>
      <scheme name="xmlschema-root-addref">
         <inherit scheme="xmlschema-root"/>
      </scheme>
      <scheme name="xmlschema">
         <inherit scheme="xml:singleroot">
            <virtual scheme="xml:element" subst-scheme="xmlschema-root-addref"/>
         </inherit>
      </scheme>
   </type>
</hrc>